module nokia-oper-file {

    yang-version "1.1";

    namespace "urn:nokia.com:sros:ns:yang:sr:oper-file";

    prefix "oper-file";

    import nokia-conf                     { prefix "conf"; }
    import nokia-sros-yang-extensions     { prefix "sros-ext"; }
    import nokia-state                    { prefix "state"; }
    import nokia-types-operation          { prefix "types-operation"; }
    import nokia-types-sros               { prefix "types-sros"; }

    sros-ext:sros-major-release "rel23";
    organization "Nokia";
    contact
        "Nokia SR OS Support
         Web: <http://www.nokia.com>";
    description
        "Nokia YANG Data model for file actions on SR OS based routers.

         Copyright 2016 Nokia. All rights reserved. Reproduction of this document
         is authorized on the condition that the foregoing copyright notice is included.

         This nokia-oper-file YANG module embodies Nokia's proprietary
         intellectual property. Nokia retains all title and ownership in the
         specification, including any revisions.

         Nokia grants all interested parties a non-exclusive license to use
         and distribute an unmodified copy of this specification in connection with
         management of Nokia products, and without fee, provided this
         copyright notice and license appear on all copies.

         This specification is supplied `as is', and Nokia makes no warranty,
         either express or implied, as to the use, operation, condition, or performance
         of the specification.";
    revision "2016-01-01";

    ///file
    container file {
        config false;
        description "Perform file operations";

        ///file/make-directory
        action make-directory {
            description "Make a directory";

            input {

                ///file/make-directory/input/url
                leaf url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-url;
                    }
                    mandatory true;
                    description "Directory location";
                }

            }
            output {

                ///file/make-directory/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/make-directory/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/make-directory/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/make-directory/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/make-directory/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/make-directory/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/make-directory/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/make-directory/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action make-directory

        ///file/format
        action format {
            description "Format a compact flash device";

            input {

                ///file/format/input/cflash-id
                leaf cflash-id {
                    type types-sros:cflash-id;
                    description "Compact flash ID";
                }

            }
            output {

                ///file/format/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/format/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/format/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/format/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/format/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/format/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/format/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/format/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action format

        ///file/repair
        action repair {
            description "Repair a compact flash file system";

            input {

                ///file/repair/input/cflash-id
                leaf cflash-id {
                    type types-sros:cflash-id;
                    description "Compact flash ID";
                }

            }
            output {

                ///file/repair/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/repair/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/repair/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/repair/output/results
                container results {
                    description "Results of a request to repair a compact flash file system";

                    ///file/repair/output/results/errors-found
                    leaf errors-found {
                        type boolean;
                        description "Whether errors were found on the file system";
                    }

                    ///file/repair/output/results/errors-repaired
                    leaf errors-repaired {
                        type boolean;
                        description "Whether all errors found on the file system were repaired";
                    }

                } // container results

                ///file/repair/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/repair/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/repair/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/repair/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/repair/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action repair

        ///file/remove-directory
        action remove-directory {
            description "Remove directories";

            input {

                ///file/remove-directory/input/url
                leaf url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-url;
                    }
                    mandatory true;
                    description "Directory URL";
                }

                ///file/remove-directory/input/force
                leaf force {
                    type empty;
                    description "Force removal without prompting";
                }

                ///file/remove-directory/input/recursive
                leaf recursive {
                    type empty;
                    description "Remove directory and contents recursively";
                }

            }
            output {

                ///file/remove-directory/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/remove-directory/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/remove-directory/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/remove-directory/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/remove-directory/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/remove-directory/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/remove-directory/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/remove-directory/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action remove-directory

        ///file/permission
        action permission {
            description "Show or set file permissions";

            input {

                ///file/permission/input/url
                leaf url {
                    type types-sros:local-file-url;
                    description "File URL to set permissions";
                }

                ///file/permission/input/attribute
                leaf attribute {
                    type enumeration {
                        enum read-only                      { value 0; }
                        enum read-write                     { value 1; }
                    }
                    description "File permission";
                }

            }
            output {

                ///file/permission/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/permission/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/permission/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/permission/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/permission/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/permission/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/permission/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/permission/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action permission

        ///file/enable
        action enable {
            description "Enable compact flash devices";

            input {

                ///file/enable/input/option
                choice option {
                    default "cflash";
                    ///file/enable/input/option/cflash
                    case cflash {

                        ///file/enable/input/option/cflash/cflash-id
                        leaf cflash-id {
                            type types-sros:cflash-id;
                            description "Enable the compact flash device";
                        }

                    }
                    ///file/enable/input/option/active
                    case active {

                        ///file/enable/input/option/active/active
                        leaf active {
                            type empty;
                            description "Enable all devices on the active CPM";
                        }

                    }
                    ///file/enable/input/option/standby
                    case standby {

                        ///file/enable/input/option/standby/standby
                        leaf standby {
                            type empty;
                            description "Enable all devices on the standby CPM";
                        }

                    }
                }
            }
            output {

                ///file/enable/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/enable/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/enable/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/enable/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/enable/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/enable/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/enable/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/enable/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action enable

        ///file/disable
        action disable {
            description "Disable compact flash devices";

            input {

                ///file/disable/input/option
                choice option {
                    default "cflash";
                    ///file/disable/input/option/cflash
                    case cflash {

                        ///file/disable/input/option/cflash/cflash-id
                        leaf cflash-id {
                            type types-sros:cflash-id;
                            description "Disable the compact flash device";
                        }

                    }
                    ///file/disable/input/option/active
                    case active {

                        ///file/disable/input/option/active/active
                        leaf active {
                            type empty;
                            description "Disable all devices on the active CPM";
                        }

                    }
                    ///file/disable/input/option/standby
                    case standby {

                        ///file/disable/input/option/standby/standby
                        leaf standby {
                            type empty;
                            description "Disable all devices on the standby CPM";
                        }

                    }
                }
            }
            output {

                ///file/disable/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/disable/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/disable/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/disable/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/disable/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/disable/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/disable/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/disable/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action disable

        ///file/copy
        action copy {
            description "Copy files";

            input {

                ///file/copy/input/source-url
                leaf source-url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:remote-file-url;
                    }
                    mandatory true;
                    description "Source URL";
                }

                ///file/copy/input/destination-url
                leaf destination-url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:remote-file-url;
                    }
                    mandatory true;
                    description "Destination URL or '.' for the working directory";
                }

                ///file/copy/input/force
                leaf force {
                    type empty;
                    description "Force copy without prompting before overwriting";
                }

                ///file/copy/input/recursive
                leaf recursive {
                    type empty;
                    description "Copy sub-directories encountered at the source URL";
                }

                ///file/copy/input/direct-http
                leaf direct-http {
                    type empty;
                    description "Allow direct HTTP connection, do not follow redirects";
                }

                ///file/copy/input/client-tls-profile
                leaf client-tls-profile {
                    type string {
                        length "1..32";
                    }
                    description "Connect over HTTP with a client TLS profile";
                }

                ///file/copy/input/proxy
                leaf proxy {
                    type types-sros:http-url;
                    description "Connect over HTTP with a proxy";
                }

            }
            output {

                ///file/copy/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/copy/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/copy/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/copy/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/copy/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/copy/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/copy/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/copy/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action copy

        ///file/move
        action move {
            description "Move or rename files or directories";

            input {

                ///file/move/input/source-url
                leaf source-url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-url;
                        type types-sros:http-url-loose;
                    }
                    mandatory true;
                    description "Source URL";
                }

                ///file/move/input/destination-url
                leaf destination-url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-url;
                        type types-sros:http-url-loose;
                    }
                    mandatory true;
                    description "Destination URL or '.' for the working directory";
                }

                ///file/move/input/force
                leaf force {
                    type empty;
                    description "Force move without prompting before overwriting";
                }

                ///file/move/input/direct-http
                leaf direct-http {
                    type empty;
                    description "Allow direct HTTP connection, do not follow redirects";
                }

                ///file/move/input/client-tls-profile
                leaf client-tls-profile {
                    type string {
                        length "1..32";
                    }
                    description "Connect over HTTP with a client TLS profile";
                }

                ///file/move/input/proxy
                leaf proxy {
                    type types-sros:http-url;
                    description "Connect over HTTP with a proxy";
                }

            }
            output {

                ///file/move/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/move/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/move/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/move/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/move/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/move/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/move/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/move/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action move

        ///file/remove
        action remove {
            description "Remove files";

            input {

                ///file/remove/input/url
                leaf url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-url;
                        type types-sros:http-url-loose;
                    }
                    mandatory true;
                    description "File URL";
                }

                ///file/remove/input/force
                leaf force {
                    type empty;
                    description "Force removal without prompting";
                }

                ///file/remove/input/direct-http
                leaf direct-http {
                    type empty;
                    description "Allow direct HTTP connection, do not follow redirects";
                }

                ///file/remove/input/client-tls-profile
                leaf client-tls-profile {
                    type string {
                        length "1..32";
                    }
                    description "Connect over HTTP with a client TLS profile";
                }

                ///file/remove/input/proxy
                leaf proxy {
                    type types-sros:http-url;
                    description "Connect over HTTP with a proxy";
                }

            }
            output {

                ///file/remove/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/remove/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/remove/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/remove/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/remove/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/remove/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/remove/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/remove/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action remove

        ///file/version
        action version {
            description "Display the version of an SR OS image file";

            input {

                ///file/version/input/url
                leaf url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-tftp-url;
                    }
                    mandatory true;
                    description "File URL";
                }

            }
            output {

                ///file/version/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/version/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/version/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/version/output/results
                container results {
                    description "Enter the results context";

                    ///file/version/output/results/version
                    container version {
                        description "Enter the version context";

                        ///file/version/output/results/version/version-number
                        leaf version-number {
                            type types-sros:very-long-description-or-empty;
                            description "Version number.";
                        }

                        ///file/version/output/results/version/version-string
                        leaf version-string {
                            type types-sros:very-long-description-or-empty;
                            description "Version string.";
                        }

                    } // container version

                } // container results

                ///file/version/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/version/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/version/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/version/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/version/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action version

        ///file/checksum
        action checksum {
            description "Compute and display checksums";

            input {

                ///file/checksum/input/type
                leaf type {
                    type enumeration {
                        enum image                          { value 1; }
                        enum md5                            { value 2; }
                        enum sha256                         { value 3; }
                    }
                    mandatory true;
                    description "Checksum option type";
                }

                ///file/checksum/input/url
                leaf url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:ftp-tftp-url;
                    }
                    mandatory true;
                    description "File URL";
                }

            }
            output {

                ///file/checksum/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/checksum/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/checksum/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/checksum/output/results
                container results {
                    description "Results of a file checksum";

                    ///file/checksum/output/results/image-or-file
                    choice image-or-file {
                        ///file/checksum/output/results/image-or-file/image
                        case image {

                            ///file/checksum/output/results/image-or-file/image/valid-sros-image
                            leaf valid-sros-image {
                                type boolean;
                                description "Whether the image is valid";
                            }

                            ///file/checksum/output/results/image-or-file/image/version
                            container version {
                                description "Enter the version context";

                                ///file/checksum/output/results/image-or-file/image/version/version-number
                                leaf version-number {
                                    type types-sros:very-long-description-or-empty;
                                    description "Version number.";
                                }

                                ///file/checksum/output/results/image-or-file/image/version/version-string
                                leaf version-string {
                                    type types-sros:very-long-description-or-empty;
                                    description "Version string.";
                                }

                            } // container version

                        }
                        ///file/checksum/output/results/image-or-file/file
                        case file {

                            ///file/checksum/output/results/image-or-file/file/checksum-value
                            leaf checksum-value {
                                type string {
                                    length "0..256";
                                }
                                description "Checksum value";
                            }

                        }
                    }
                } // container results

                ///file/checksum/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/checksum/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/checksum/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/checksum/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/checksum/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action checksum

        ///file/unzip
        action unzip {
            description "Unzip files";

            input {

                ///file/unzip/input/source-url
                leaf source-url {
                    type union {
                        type types-sros:local-file-url;
                        type types-sros:remote-file-url;
                    }
                    mandatory true;
                    description "Source URL";
                }

                ///file/unzip/input/destination-url
                leaf destination-url {
                    type types-sros:local-file-url;
                    description "Destination URL or '.' for the working directory";
                }

                ///file/unzip/input/create-destination
                leaf create-destination {
                    type empty;
                    description "Create destination directory if it does not exist";
                }

                ///file/unzip/input/option
                choice option {
                    ///file/unzip/input/option/force
                    case force {

                        ///file/unzip/input/option/force/force
                        leaf force {
                            type empty;
                            description "Force the unzip operation without prompting";
                        }

                    }
                    ///file/unzip/input/option/list
                    case list {

                    }
                }
            }
            output {

                ///file/unzip/output/operation-id
                leaf operation-id {
                    type types-operation:operation-id;
                    description "ID assigned to the operation.";
                }

                ///file/unzip/output/start-time
                leaf start-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation started its execution.";
                }

                ///file/unzip/output/results-path
                leaf results-path {
                    type types-operation:operation-path;
                    description "Path to the results of the operation formatted as xpath.";
                }

                ///file/unzip/output/status
                leaf status {
                    type types-operation:operation-status;
                    description "Status of the operation";
                }

                ///file/unzip/output/error-message
                leaf-list error-message {
                    type types-operation:operation-message;
                    description "Error messages reported during execution of the operation.";
                }

                ///file/unzip/output/warning-message
                leaf-list warning-message {
                    type types-operation:operation-message;
                    description "Warning messages reported during execution of the operation.";
                }

                ///file/unzip/output/info-message
                leaf-list info-message {
                    type types-operation:operation-message;
                    description "Info messages reported during execution of the operation.";
                }

                ///file/unzip/output/end-time
                leaf end-time {
                    type types-operation:operation-timestamp;
                    description "Time when the operation ended its execution.";
                }

            }
        } // action unzip

    } // container file

}
