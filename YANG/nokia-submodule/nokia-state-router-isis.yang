submodule nokia-state-router-isis {

    yang-version "1.1";

    belongs-to nokia-state { prefix "state"; }

    import ietf-inet-types                { prefix "inet"; }
    import ietf-yang-types                { prefix "yang"; }
    import nokia-sros-yang-extensions     { prefix "sros-ext"; }
    import nokia-types-igp                { prefix "types-igp"; }
    import nokia-types-isis               { prefix "types-isis"; }
    import nokia-types-router             { prefix "types-router"; }
    import nokia-types-sros               { prefix "types-sros"; }

    sros-ext:sros-major-release "rel23";
    organization "Nokia";
    contact
        "Nokia SR OS Support
         Web: <http://www.nokia.com>";
    description
        "Nokia YANG Data model with operational state for router isis protocol attributes on SR OS based routers.

         Copyright 2016 Nokia. All rights reserved. Reproduction of this document
         is authorized on the condition that the foregoing copyright notice is included.

         This nokia-state-router-isis YANG module embodies Nokia's proprietary
         intellectual property. Nokia retains all title and ownership in the
         specification, including any revisions.

         Nokia grants all interested parties a non-exclusive license to use
         and distribute an unmodified copy of this specification in connection with
         management of Nokia products, and without fee, provided this
         copyright notice and license appear on all copies.

         This specification is supplied `as is', and Nokia makes no warranty,
         either express or implied, as to the use, operation, condition, or performance
         of the specification.";
    revision "2023-06-01";

    grouping state-router-isis {
        ///nokia-state/state/router/isis
        list isis {
            key "isis-instance";
            description "Enter the isis list instance";

            ///nokia-state/state/router/isis/isis-instance
            leaf isis-instance {
                type int32 {
                    range "0..127";
                }
                description "Instance ID for the IS-IS instance";
            }

            ///nokia-state/state/router/isis/oper-system-id
            leaf oper-system-id {
                type types-igp:system-id;
                description "The ID for this instance of the Integrated IS-IS protocol.";
            }

            ///nokia-state/state/router/isis/oper-router-id
            leaf oper-router-id {
                type types-sros:ipv4-address;
                description "Indicates a ipv4-address uniquely identifying the router in the Autonomous System.";
            }

            ///nokia-state/state/router/isis/oper-ipv6-te-router-id
            leaf oper-ipv6-te-router-id {
                type types-sros:ipv6-address;
                description "Indicates a ipv6-address identifying the TE router.";
            }

            ///nokia-state/state/router/isis/db-export-igp-asn
            leaf db-export-igp-asn {
                type inet:as-number;
                description "Indicates Autonomous System Number the IGP is using during its database export.";
            }

            ///nokia-state/state/router/isis/oper-state
            leaf oper-state {
                type types-sros:oper-state;
                description
                    "The value of the this object indicates the operational
                     state of the destination.";
            }

            ///nokia-state/state/router/isis/last-enabled-time
            leaf last-enabled-time {
                type yang:date-and-time;
                description "Indicates the last system up time when the current IS-IS protocol instance was run.";
            }

            ///nokia-state/state/router/isis/last-spf
            leaf last-spf {
                type yang:date-and-time;
                description
                    "Indicates the system up time when the last SPF run was performed for this
                     instance of the IS-IS protocol in the router.";
            }

            ///nokia-state/state/router/isis/prefix-limit-overload-time-left
            leaf prefix-limit-overload-time-left {
                type int32 {
                    range "0..1800";
                }
                description
                    "Indicates the remaining time in seconds before IS-IS will attempt to enter its
                     normal state to recover from the overload state due to prefix limit exceeded.

                     The value of 0 implies that the system is either not in overload or indefinitely in overload state.";
            }

            ///nokia-state/state/router/isis/version
            leaf version {
                type string;
                description "Indicates the version number of the IS-IS protocol to which this instance conforms.";
            }

            ///nokia-state/state/router/isis/l1-state
            leaf l1-state {
                type types-isis:level-state;
                description "Indicates the state of the Level 1 database.";
            }

            ///nokia-state/state/router/isis/l2-state
            leaf l2-state {
                type types-isis:level-state;
                description "Indicates the state of the Level 2 database.";
            }

            ///nokia-state/state/router/isis/spf-hold-time
            leaf spf-hold-time {
                type int32 {
                    range "0..65535";
                }
                units "seconds";
                description "Indicates the time interval at which SPF is run.";
            }

            ///nokia-state/state/router/isis/loopfree-alternate
            container loopfree-alternate {
                description "Enable the loopfree-alternate context";

                ///nokia-state/state/router/isis/loopfree-alternate/statistics
                container statistics {
                    description "Enter the statistics context";

                    ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa
                    container lfa {
                        description "Enter the lfa context";

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa/runs
                        leaf runs {
                            type yang:counter32;
                            description "Indicates the number of times the calculations have been made.";
                        }

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa/time
                        leaf time {
                            type yang:date-and-time;
                            description "Indicates the time when the last lfa was scheduled.";
                        }

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa/partial
                        container partial {
                            description "Enter the partial context";

                            ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa/partial/runs
                            leaf runs {
                                type yang:counter32;
                                description "Indicates the number of times the calculations have been made.";
                            }

                            ///nokia-state/state/router/isis/loopfree-alternate/statistics/lfa/partial/time
                            leaf time {
                                type yang:date-and-time;
                                description "Indicates the time when the last lfa was scheduled.";
                            }

                        } // container partial

                    } // container lfa

                    ///nokia-state/state/router/isis/loopfree-alternate/statistics/remote-lfa
                    container remote-lfa {
                        description "Enter the remote-lfa context";

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/remote-lfa/runs
                        leaf runs {
                            type yang:counter32;
                            description "Indicates the number of times the calculations have been made.";
                        }

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/remote-lfa/time
                        leaf time {
                            type yang:date-and-time;
                            description "Indicates the time when the last lfa was scheduled.";
                        }

                    } // container remote-lfa

                    ///nokia-state/state/router/isis/loopfree-alternate/statistics/ti-lfa
                    container ti-lfa {
                        description "Enter the ti-lfa context";

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/ti-lfa/runs
                        leaf runs {
                            type yang:counter32;
                            description "Indicates the number of times the calculations have been made.";
                        }

                        ///nokia-state/state/router/isis/loopfree-alternate/statistics/ti-lfa/time
                        leaf time {
                            type yang:date-and-time;
                            description "Indicates the time when the last lfa was scheduled.";
                        }

                    } // container ti-lfa

                } // container statistics

            } // container loopfree-alternate

            ///nokia-state/state/router/isis/statistics
            container statistics {
                description "Enter the statistics context";

                ///nokia-state/state/router/isis/statistics/lsp-regenerations
                leaf lsp-regenerations {
                    type yang:counter32;
                    description "Indicates the count of LSP regenerations.";
                }

                ///nokia-state/state/router/isis/statistics/initiated-purges
                leaf initiated-purges {
                    type yang:counter32;
                    description "Indicates the number of times purges have been initiated.";
                }

                ///nokia-state/state/router/isis/statistics/corrupted-lsps
                leaf corrupted-lsps {
                    type yang:counter32;
                    description "Indicates the number of corrupted LSPs detected.";
                }

                ///nokia-state/state/router/isis/statistics/lsp-l1-db-overloads
                leaf lsp-l1-db-overloads {
                    type yang:counter32;
                    description "Indicates the number of times the LSP L1 database has become overloaded.";
                }

                ///nokia-state/state/router/isis/statistics/lsp-l2-db-overloads
                leaf lsp-l2-db-overloads {
                    type yang:counter32;
                    description "Indicates the number of times the Level 2 LSP database has become overloaded.";
                }

                ///nokia-state/state/router/isis/statistics/manual-address-dropped-from-areas
                leaf manual-address-dropped-from-areas {
                    type yang:counter32;
                    description "Indicates the number of times a manual address has been dropped from the area.";
                }

                ///nokia-state/state/router/isis/statistics/attempt-to-exceed-max-sequence-numbers
                leaf attempt-to-exceed-max-sequence-numbers {
                    type yang:counter32;
                    description "Indicates the number of times the IS has attempted to exceed the maximum sequence number.";
                }

                ///nokia-state/state/router/isis/statistics/sequence-number-skips
                leaf sequence-number-skips {
                    type yang:counter32;
                    description "Indicates the number of times a sequence number skip has occurred.";
                }

                ///nokia-state/state/router/isis/statistics/own-lsp-purges
                leaf own-lsp-purges {
                    type yang:counter32;
                    description
                        "Indicates the number of times a zero-aged copy of the system's own LSP
                         is received from some other node.";
                }

                ///nokia-state/state/router/isis/statistics/id-field-length-mismatches
                leaf id-field-length-mismatches {
                    type yang:counter32;
                    description
                        "Indicates the number of times a PDU is received with a different value
                         for ID field length to that of the receiving system.";
                }

                ///nokia-state/state/router/isis/statistics/max-area-address-mismatches
                leaf max-area-address-mismatches {
                    type yang:counter32;
                    description
                        "Indicates the number of times a PDU is received with a different value
                         for maximum area addresses from that of the receiving system.";
                }

                ///nokia-state/state/router/isis/statistics/authentication-failures
                leaf authentication-failures {
                    type yang:counter32;
                    description "Indicates the number of authentication failures recognized by this instance of the protocol.";
                }

                ///nokia-state/state/router/isis/statistics/partition-changes
                leaf partition-changes {
                    type yang:counter32;
                    description "indicates the number of partition changes.";
                }

                ///nokia-state/state/router/isis/statistics/sid
                container sid {
                    description "Enter the sid context";

                    ///nokia-state/state/router/isis/statistics/sid/srgb-errors
                    leaf srgb-errors {
                        type yang:counter32;
                        description "Indicates the total number of errors for SIDs that are not within the label-range of the router.";
                    }

                    ///nokia-state/state/router/isis/statistics/sid/duplicated-errors
                    leaf duplicated-errors {
                        type yang:counter32;
                        description "Indicates the total number of errors for SIDs which are already assigned to another prefix.";
                    }

                } // container sid

                ///nokia-state/state/router/isis/statistics/spf
                container spf {
                    description "Enter the spf context";

                    ///nokia-state/state/router/isis/statistics/spf/runs
                    leaf runs {
                        type yang:counter32;
                        description "Indicates the number of times the calculations have been made.";
                    }

                    ///nokia-state/state/router/isis/statistics/spf/time
                    leaf time {
                        type yang:date-and-time;
                        description "Indicates the time when the last lfa was scheduled.";
                    }

                    ///nokia-state/state/router/isis/statistics/spf/partial
                    container partial {
                        description "Enter the partial context";

                        ///nokia-state/state/router/isis/statistics/spf/partial/runs
                        leaf runs {
                            type yang:counter32;
                            description "Indicates the number of times the calculations have been made.";
                        }

                        ///nokia-state/state/router/isis/statistics/spf/partial/time
                        leaf time {
                            type yang:date-and-time;
                            description "Indicates the time when the last lfa was scheduled.";
                        }

                    } // container partial

                } // container spf

                ///nokia-state/state/router/isis/statistics/cspf
                container cspf {
                    description "Enter the cspf context";

                    ///nokia-state/state/router/isis/statistics/cspf/requests
                    leaf requests {
                        type yang:counter32;
                        description "Indicates the number of CSPF requests made to the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/cspf/dropped-requests
                    leaf dropped-requests {
                        type yang:counter32;
                        description "Indicates the number of dropped CSPF requests by the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/cspf/paths-found
                    leaf paths-found {
                        type yang:counter32;
                        description
                            "Indicates the number of responses to CSPF requests for which paths satisfying
                             the constraints were found.";
                    }

                    ///nokia-state/state/router/isis/statistics/cspf/paths-not-found
                    leaf paths-not-found {
                        type yang:counter32;
                        description
                            "Indicates the number of responses to CSPF requests for which no paths satisfying
                             the constraints were found.";
                    }

                } // container cspf

                ///nokia-state/state/router/isis/statistics/lsp
                container lsp {
                    description "Enter the lsp context";

                    ///nokia-state/state/router/isis/statistics/lsp/received
                    leaf received {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs received by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/lsp/dropped
                    leaf dropped {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs dropped by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/lsp/sent
                    leaf sent {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs sent out by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/lsp/retransmitted
                    leaf retransmitted {
                        type yang:counter32;
                        description
                            "Indicates the count of link state PDUs that had to be retransmitted by this
                             instance of the protocol.";
                    }

                } // container lsp

                ///nokia-state/state/router/isis/statistics/iih
                container iih {
                    description "Enter the iih context";

                    ///nokia-state/state/router/isis/statistics/iih/received
                    leaf received {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs received by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/iih/dropped
                    leaf dropped {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs dropped by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/iih/sent
                    leaf sent {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs sent out by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/iih/retransmitted
                    leaf retransmitted {
                        type yang:counter32;
                        description
                            "Indicates the count of link state PDUs that had to be retransmitted by this
                             instance of the protocol.";
                    }

                } // container iih

                ///nokia-state/state/router/isis/statistics/csnp
                container csnp {
                    description "Enter the csnp context";

                    ///nokia-state/state/router/isis/statistics/csnp/received
                    leaf received {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs received by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/csnp/dropped
                    leaf dropped {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs dropped by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/csnp/sent
                    leaf sent {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs sent out by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/csnp/retransmitted
                    leaf retransmitted {
                        type yang:counter32;
                        description
                            "Indicates the count of link state PDUs that had to be retransmitted by this
                             instance of the protocol.";
                    }

                } // container csnp

                ///nokia-state/state/router/isis/statistics/psnp
                container psnp {
                    description "Enter the psnp context";

                    ///nokia-state/state/router/isis/statistics/psnp/received
                    leaf received {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs received by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/psnp/dropped
                    leaf dropped {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs dropped by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/psnp/sent
                    leaf sent {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs sent out by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/psnp/retransmitted
                    leaf retransmitted {
                        type yang:counter32;
                        description
                            "Indicates the count of link state PDUs that had to be retransmitted by this
                             instance of the protocol.";
                    }

                } // container psnp

                ///nokia-state/state/router/isis/statistics/unknown
                container unknown {
                    description "Enter the unknown context";

                    ///nokia-state/state/router/isis/statistics/unknown/received
                    leaf received {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs received by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/unknown/dropped
                    leaf dropped {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs dropped by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/unknown/sent
                    leaf sent {
                        type yang:counter32;
                        description "Indicates the count of link state PDUs sent out by this instance of the protocol.";
                    }

                    ///nokia-state/state/router/isis/statistics/unknown/retransmitted
                    leaf retransmitted {
                        type yang:counter32;
                        description
                            "Indicates the count of link state PDUs that had to be retransmitted by this
                             instance of the protocol.";
                    }

                } // container unknown

            } // container statistics

            ///nokia-state/state/router/isis/flexible-algorithms
            container flexible-algorithms {
                description "Enter the flexible-algorithms context";

                ///nokia-state/state/router/isis/flexible-algorithms/flex-algo
                list flex-algo {
                    key "flex-algo-id";
                    description "Enter the flex-algo list instance";

                    ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/flex-algo-id
                    leaf flex-algo-id {
                        type uint32 {
                            range "128..255";
                        }
                        description "Flexible algorithm ID";
                    }

                    ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level
                    list level {
                        key "level-number";
                        description "Enter the level list instance";

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/level-number
                        leaf level-number {
                            type enumeration {
                                enum 1                              { value 1; }
                                enum 2                              { value 2; }
                            }
                            description "ISIS protocol level number";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/oper-state
                        leaf oper-state {
                            type types-sros:oper-state;
                            description
                                "The value of oper-state indicates the current operating
                                 state of the Flexible Algorithm participation in this
                                 ISIS level.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/fad-count
                        leaf fad-count {
                            type uint32;
                            description
                                "The value of fad-count indicates the number of Flexible
                                 Algorithm Definitions (FAD) for the Flex Algo in the
                                 ISIS level.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/selected-owner
                        leaf selected-owner {
                            type types-igp:system-id;
                            description
                                "The value of selected-owner indicates the System ID of
                                 the owner of the selected Flexible Algorithm Definition
                                 (FAD).";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions
                        list flex-algo-definitions {
                            key "fad-owner-lsp-id priority";
                            description "Enter the flex-algo-definitions list instance";

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/fad-owner-lsp-id
                            leaf fad-owner-lsp-id {
                                type types-isis:lsp-id;
                                description
                                    "The lsp-id of the node advertising the flex-algo definition.
                                     The value given in the format as 6 octets of fad-owner's system-id followed by
                                     1 octet Lan-ID and 1 octet LSP Number.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/priority
                            leaf priority {
                                type uint32;
                                description "The value of priority indicates the priority of the FAD.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/supported
                            leaf supported {
                                type boolean;
                                description "The value of supported indicates if this FAD is supported by the router.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/unsupported-reason
                            leaf unsupported-reason {
                                type enumeration {
                                    enum none                           { value 0; }
                                    enum metric-type                    { value 1; }
                                    enum calculation-type               { value 2; }
                                    enum constraint                     { value 3; }
                                    enum flag                           { value 4; }
                                    enum subtlv                         { value 5; }
                                }
                                description "The value of unupported-reason indicates why this FAD is not supported.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/metric-type
                            leaf metric-type {
                                type enumeration {
                                    enum igp                            { value 0; }
                                    enum delay                          { value 1; }
                                    enum te-metric                      { value 2; }
                                    enum unsupported-metric-type        { value 3; }
                                }
                                description "The value of metric-type indicates the metric type of the FAD.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/calc-type
                            leaf calc-type {
                                type uint32;
                                description "The value of calc-type indicates the calculation type of the FAD.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/exclude
                            leaf exclude {
                                type types-sros:hex-string;
                                description "The value of exclude indicates the exclude rule that is used during the Flex-Algorithm path calculation.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/include-any
                            leaf include-any {
                                type types-sros:hex-string;
                                description "The value of include-any indicates the include-any rule that is used during the Flex-Algorithm path calculation.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/include-all
                            leaf include-all {
                                type types-sros:hex-string;
                                description "The value of include-all indicates the include-all rule that is used during the Flex-Algorithm path calculation.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/level/flex-algo-definitions/flags
                            leaf flags {
                                type types-sros:hex-string;
                                description "The value of flags indicates the Flexible Algorithm Definition flags.";
                            }


                        } // list flex-algo-definitions

                    } // list level

                    ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route
                    list route {
                        key "multi-topology-id destination";
                        description "Enter the route list instance";

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/multi-topology-id
                        leaf multi-topology-id {
                            type uint32;
                            description
                                "The value specifies the multi-topology id number for the path.

                                 If multi-topology is not supported for the path then
                                 the value should be 0.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/destination
                        leaf destination {
                            type types-sros:ip-prefix;
                            description "The value specifies the IP address and mask of the route destination.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/level
                        leaf level {
                            type types-isis:level;
                            description "The value indicates the IS-IS Level at which the prefix was learned.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/status
                        leaf status {
                            type enumeration {
                                enum active                         { value 0; }
                                enum rtm-add-failed                 { value 1; }
                                enum fib-add-failed                 { value 2; }
                            }
                            description "The value indicates the reason why a route is not active.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/metric
                        leaf metric {
                            type uint32;
                            description
                                "The value indicates the routing metric for a backup route.

                                 The semantics of this metric are determined by the routing-protocol
                                 specified in the route's ipCidrRouteProto value.

                                 The value is only valid when backup-flags has a value of 'has-lfa'.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/type
                        leaf type {
                            type enumeration {
                                enum internal                       { value 1; }
                                enum external                       { value 2; }
                            }
                            description "The value indicates the type of route represented by this row entry.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/tag
                        leaf tag {
                            type uint32;
                            description
                                "The value indicates a 32-bit integer route tag for this route.

                                 A value of 0 indicates that the tag has not been set.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup
                        container backup {
                            description "Enter the backup context";

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/next-hop-ip
                            leaf next-hop-ip {
                                type types-sros:ip-address-with-zone;
                                description "The value specifies the IP address of the next hop for this route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/next-hop-type
                            leaf next-hop-type {
                                type types-isis:cidr-next-hop-type;
                                description "The value indicates the type of next hop for this backup route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/next-hop-owner
                            leaf next-hop-owner {
                                type types-isis:cidr-next-hop-owner;
                                description "The value indicates the owner of next hop for this backup route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/next-hop-tunnel-id
                            leaf next-hop-tunnel-id {
                                type uint32;
                                description
                                    "The value indicates the auxiliary information, for next hop owner as indicated by
                                     backup-next-hop-owner.

                                     The value of indicates the tunnel-id existing for this backup next hop type and owner.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/type
                            leaf type {
                                type enumeration {
                                    enum node-protection                { value 1; }
                                    enum link-protection                { value 2; }
                                }
                                description
                                    "The value indicates the type of protection used by the backup next-hop.

                                     The value 'not-applicable' indicates that the backup next hop type
                                     is not applicable
                                     the value 'node-protection' indicates that the backup next hop uses a
                                     node-protection mechanism
                                     the value 'link-protection' indicates that the backup next hop uses
                                     link-protection mechanism.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/metric
                            leaf metric {
                                type uint32;
                                description
                                    "The value indicates the routing metric for a backup route.

                                     The semantics of this metric are determined by the routing-protocol
                                     specified in the route's ipCidrRouteProto value.

                                     The value is only valid when backup-flags has a value of 'has-lfa'.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/backup/flags
                            leaf flags {
                                type enumeration {
                                    enum none                           { value 0; }
                                    enum has-lfa                        { value 1; }
                                }
                                description
                                    "The value indicates the presence or absence of LFA next-hops.

                                     The value 'none' indicates that no next hop is present
                                     the value 'has-lfa' indicates that an LFA next hop is present in addition
                                     to the regular next-hop.";
                            }

                        } // container backup

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/prefix-sid
                        container prefix-sid {
                            description "Enter the prefix-sid context";

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/prefix-sid/label
                            leaf label {
                                type uint32;
                                description "The value specifies the SID label or index for this prefix.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/prefix-sid/flags
                            leaf flags {
                                type bits {
                                    bit bit-r                          { position 0; }
                                    bit bit-n                          { position 1; }
                                    bit bit-p                          { position 2; }
                                    bit bit-e                          { position 3; }
                                    bit bit-v                          { position 4; }
                                    bit bit-l                          { position 5; }
                                }
                                description
                                    "The value indicates the flags of a Prefix-SID advertised by
                                     an IP Reach or Label Binding TLV.

                                     bit-r   (0)  - Re-advertisement flag.  If set, then the prefix to
                                       which this Prefix-SID is attached, has been propagated by the
                                       router either from another level (i.e.: from level-1 to level-2
                                       or the opposite) or from redistribution (e.g.: from another
                                       protocol).
                                     bit-n   (1)  - Node-SID flag. The N-Flag is set on Prefix-SIDs
                                       attached to a router loopback address.
                                     bit-p   (2)  - no-PHP flag. If set, then the penultimate hop MUST NOT
                                       pop the Prefix-SID before delivering the packet to the node
                                       that advertised the Prefix-SID.
                                     bit-e   (3)  - Explicit-Null Flag.  If set, any upstream neighbor
                                       of the Prefix-SID originator MUST replace the Prefix-SID with
                                       a Prefix-SID having an Explicit-NULL value (0 for IPv4 and 2 for
                                       IPv6) before forwarding the packet.
                                     bit-v   (4)  - Value flag. If set, then the Prefix-SID carries a
                                       value (instead of an index).
                                     bit-l   (5)  - Local Flag.  If set, then the value/index carried by
                                       the Prefix-SID has local significance.";
                            }

                        } // container prefix-sid

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop
                        list next-hop {
                            key "ecmp-index";
                            description "Enter the next-hop list instance";

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/ecmp-index
                            leaf ecmp-index {
                                type types-router:ip-ecmp;
                                description "ECMP index of this route next-hop.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/next-hop-ip
                            leaf next-hop-ip {
                                type types-sros:ip-address-with-zone;
                                description "The value specifies the IP address of the next hop for this route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/next-hop-type
                            leaf next-hop-type {
                                type types-isis:cidr-next-hop-type;
                                description "The value indicates the type of next hop for this backup route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/next-hop-owner
                            leaf next-hop-owner {
                                type types-isis:cidr-next-hop-owner;
                                description "The value indicates the owner of next hop for this backup route.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/next-hop-tunnel-id
                            leaf next-hop-tunnel-id {
                                type uint32;
                                description
                                    "The value indicates the auxiliary information, for next hop owner as indicated by
                                     backup-next-hop-owner.

                                     The value of indicates the tunnel-id existing for this backup next hop type and owner.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/spf-version
                            leaf spf-version {
                                type yang:counter32;
                                description "The value indicates the run of SPF calculation in which this route was selected.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/next-hop-system-id
                            leaf next-hop-system-id {
                                type types-igp:system-id;
                                description
                                    "The value indicates the system-id of the next hop IS through
                                     which this route is reachable.";
                            }

                            ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/route/next-hop/rtm-status
                            leaf rtm-status {
                                type enumeration {
                                    enum success                        { value 0; }
                                    enum discarded                      { value 1; }
                                }
                                description "Indicates the next hop status in RTM";
                            }

                        } // list next-hop

                    } // list route

                    ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage
                    list sr-lfa-coverage {
                        key "level-number multi-topology-id sid-type protocol-version";
                        description "Enter the sr-lfa-coverage list instance";

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/level-number
                        leaf level-number {
                            type types-isis:level;
                            description "Specifies the IS-IS protocol level to which these attributes are applied.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/multi-topology-id
                        leaf multi-topology-id {
                            type enumeration {
                                enum ipv4                           { value 0; }
                                enum ipv6                           { value 1; }
                                enum ipv4-mcast                     { value 2; }
                                enum ipv6-mcast                     { value 3; }
                            }
                            description
                                "The value specifies the multi-topology id number for the path.

                                 Possible values are:

                                 ipv4(0)      - indicates MT0 or standard topology
                                 ipv6(1)      - indicates MT2 or IPv6 routing topology
                                 ipv4-mcast(2) - indicates MT3 or IPv4 multicast routing topology
                                 ipv6-mcast(3) - indicates MT4 or IPv6 multicast routing topology.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/sid-type
                        leaf sid-type {
                            type enumeration {
                                enum node-sid                       { value 0; }
                                enum adj-sid                        { value 1; }
                            }
                            description
                                "The value specifies the SID type for which SR LFA coverage
                                 has been computed.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/protocol-version
                        leaf protocol-version {
                            type enumeration {
                                enum ipv4                           { value 0; }
                                enum ipv6                           { value 1; }
                            }
                            description "The value specifies the protocol version for which SR LFA coverage has been computed.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/lfa-covered
                        leaf lfa-covered {
                            type uint32;
                            description "The value indicates the number of SIDs for which an LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/lfa-covered-percent
                        leaf lfa-covered-percent {
                            type types-sros:percent;
                            description "The value indicates the portion of SIDs for which an LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/remote-lfa-covered
                        leaf remote-lfa-covered {
                            type uint32;
                            description "The value indicates the number of SIDs for which an Remote LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/remote-lfa-covered-percent
                        leaf remote-lfa-covered-percent {
                            type types-sros:percent;
                            description "The value indicates the portion of SIDs for which an Remote LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/ti-lfa-covered
                        leaf ti-lfa-covered {
                            type uint32;
                            description "The value indicates the number of SIDs for which an Topology Independent LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/ti-lfa-covered-percent
                        leaf ti-lfa-covered-percent {
                            type types-sros:percent;
                            description "The value indicates the portion of SIDs for which an LFA is found.";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/total-sid
                        leaf total-sid {
                            type uint32;
                            description "The value indicates the number of SIDs eligible for SR LFA calculation";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/backup-total-sid
                        leaf backup-total-sid {
                            type uint32;
                            description "The value indicates the number of SIDs for which an LFA, Remote LFA or Topology Independent LFA is found";
                        }

                        ///nokia-state/state/router/isis/flexible-algorithms/flex-algo/sr-lfa-coverage/backup-total-sid-percent
                        leaf backup-total-sid-percent {
                            type uint32;
                            description "The value indicates the portion of SIDs for which an LFA, Remote LFA or Topology Independent LFA is found";
                        }

                    } // list sr-lfa-coverage

                } // list flex-algo

            } // container flexible-algorithms

            ///nokia-state/state/router/isis/segment-routing
            container segment-routing {
                description "Enable the segment-routing context";

                ///nokia-state/state/router/isis/segment-routing/adjacency-set
                list adjacency-set {
                    key "id";
                    description "Enter the adjacency-set list instance";

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/id
                    leaf id {
                        type uint32 {
                            range "1..max";
                        }
                        description "Identifier for specified adjacency set";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/dynamic-sid-value
                    leaf dynamic-sid-value {
                        type uint32;
                        description
                            "The value indicates the IPvx SID label for this adjacency-set
                             allocated dynamically when none is configured.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/tunl-dest-ip
                    leaf tunl-dest-ip {
                        type types-sros:ip-address;
                        description
                            "Indicates the IP address of the adjacency-set tunnel destination. An
                             adjacency-set with links to different neighbors will have dest@ set
                             to 0.0.0.0.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/neighbor-system-id
                    leaf neighbor-system-id {
                        type types-igp:system-id;
                        description
                            "Specifies the system-id of the node where all links are terminated in case the
                             adjacency-set is of type parallel.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/members-count
                    leaf members-count {
                        type uint32;
                        description
                            "The value indicates the number of interfaces that are a member of the
                             adjacency-set.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/active-members
                    leaf active-members {
                        type uint32;
                        description
                            "The value indicates the number of active adajcencies that are a member
                             of the adjacancy-set.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/status
                    leaf status {
                        type enumeration {
                            enum not-active                     { value 0; }
                            enum active                         { value 1; }
                            enum active-incomplete              { value 2; }
                            enum fib-add-failed                 { value 3; }
                        }
                        description "The value indicates the reason why an adjacency-set is not active.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/uptime
                    leaf uptime {
                        type int32;
                        units "seconds";
                        description
                            "The amount of time in seconds since this adjacency-set
                             was last programmed.";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/mtu
                    leaf mtu {
                        type uint32;
                        description
                            "The MTU of the adjacency-set tunnel. This value takes into account the lowest
                             value of active links, the label overhead and the segment-routing
                             tunnel-mtu";
                    }

                    ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop
                    list next-hop {
                        key "system-id interface-name";
                        description "Enter the next-hop list instance";

                        ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop/system-id
                        leaf system-id {
                            type types-igp:system-id;
                            description "The system-id of the node that terminates an adjacency-set link.";
                        }

                        ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop/interface-name
                        leaf interface-name {
                            type types-sros:interface-name;
                            description "Router interface name.";
                        }

                        ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop/next-hop-ip
                        leaf next-hop-ip {
                            type types-sros:ip-address;
                            description "The value specifies the IP address of the next hop for this adjacency-set link.";
                        }

                        ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop/usage
                        leaf usage {
                            type enumeration {
                                enum undefined                      { value 1; }
                                enum level1                         { value 2; }
                                enum level2                         { value 3; }
                                enum level1and2                     { value 4; }
                            }
                            description
                                "An adjacency-set link of type level1 is used for level 1 traffic only. An
                                 adjacency-set link of type level2 is used for level 2 traffic only. An
                                 adjacency-set link of type level1and2 is used for both level 1 and level 2 traffic.";
                        }

                        ///nokia-state/state/router/isis/segment-routing/adjacency-set/next-hop/level
                        leaf level {
                            type enumeration {
                                enum level1                         { value 1; }
                                enum level2                         { value 2; }
                                enum level1-l2                      { value 3; }
                                enum unknown                        { value 4; }
                            }
                            description "The value indicates the circuit type of the adjacency-set link.";
                        }

                    } // list next-hop

                } // list adjacency-set

            } // container segment-routing

            ///nokia-state/state/router/isis/segment-routing-v6
            container segment-routing-v6 {
                description "Enter the segment-routing-v6 context";

                ///nokia-state/state/router/isis/segment-routing-v6/locator-state
                list locator-state {
                    key "multi-topology-id locator advertising-system-id level-number";
                    description "Enter the locator-state list instance";

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/multi-topology-id
                    leaf multi-topology-id {
                        type uint32;
                        description
                            "The value specifies the multi-topology id number for the locator.
                             If multi-topology is not supported for the locator then
                             the value should be 0.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/locator
                    leaf locator {
                        type types-sros:ip-prefix;
                        description "The value specifies the IP address and mask of the locator.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/advertising-system-id
                    leaf advertising-system-id {
                        type types-igp:system-id;
                        description
                            "The value specifies the system-id of the advertising
                             IS through which this locator is reachable.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/level-number
                    leaf level-number {
                        type enumeration {
                            enum 1                              { value 1; }
                            enum 2                              { value 2; }
                        }
                        description "ISIS protocol level number";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/type
                    leaf type {
                        type enumeration {
                            enum internal                       { value 1; }
                            enum external                       { value 2; }
                        }
                        description "The value indicates the type of route represented by this row entry.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/locator-flags
                    leaf locator-flags {
                        type bits {
                            bit bit-d                          { position 0; }
                        }
                        description
                            "The value indicates the flags advertised in the SRv6 Locator TLV.

                             bit-d   (0)  - Down flag.  If set, then the Locator has been leaked 
                                 from Level-2 to Level-1 (only downwards, not upwards to prevent
                                 looping).";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/algorithm
                    leaf algorithm {
                        type int32 {
                            range "0|128..255";
                        }
                        description "The value indicates the algorithm related to the SID.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/admin-tag
                    leaf admin-tag {
                        type uint32;
                        description "The value indicates the administrative tag advertised in the sub-TLV.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/attribute-flags
                    leaf attribute-flags {
                        type bits {
                            bit bit-x                          { position 0; }
                            bit bit-r                          { position 1; }
                            bit bit-n                          { position 2; }
                            bit bit-e                          { position 3; }
                            bit bit-a                          { position 4; }
                        }
                        description
                            "The value indicates the Prefix Attribute Flags advertised in the sub-TLV.

                             bit-x   (0)  - External Prefix flag. If set, then the prefix
                                           has been redistributed from another protocol.
                             bit-r   (1)  - Re-advertisement flag.  If set, then the prefix 
                                           has been leaked from one level to another (upwards or downwards).
                             bit-n   (2)  - Node flag. If set, then the prefix identifies the 
                                           advertising router. The advertising router may choose to not set
                                           this flag.
                             bit-e   (3)  - ELC flag. If set, then the local host prefix supports 
                                           Entropy Label Capability (ELC) on all interfaces. 
                             bit-a   (4)  - Anycast flag. If set, then the prefix/SRv6 locator
                                           is configured as anycast.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/locator-state/end-sid
                    list end-sid {
                        key "end-sid";
                        description "Enter the end-sid list instance";

                        ///nokia-state/state/router/isis/segment-routing-v6/locator-state/end-sid/end-sid
                        leaf end-sid {
                            type types-sros:ipv6-address;
                            description "The value specifies the IPv6 address of the end SID.";
                        }

                        ///nokia-state/state/router/isis/segment-routing-v6/locator-state/end-sid/endpoint-behavior
                        leaf endpoint-behavior {
                            type types-isis:srv6-endpoint-behavior-type;
                            description "The value indicates the SRv6 endpoint behavior advertised in the SID sub-TLV.";
                        }

                    } // list end-sid

                } // list locator-state

                ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state
                list micro-segment-locator-state {
                    key "multi-topology-id micro-segment-locator advertising-system-id level-number";
                    description "Enter the micro-segment-locator-state list instance";

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/multi-topology-id
                    leaf multi-topology-id {
                        type uint32;
                        description
                            "The value specifies the multi-topology id number for the
                             micro-segment locator.
                             If multi-topology is not supported for the micro-segment locator
                             then the value should be 0.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/micro-segment-locator
                    leaf micro-segment-locator {
                        type types-sros:ip-prefix;
                        description "The value specifies the IP address and mask of the micro-segment locator.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/advertising-system-id
                    leaf advertising-system-id {
                        type types-igp:system-id;
                        description
                            "The value specifies the system-id of the advertising
                             IS through which this micro-segment locator is reachable.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/level-number
                    leaf level-number {
                        type enumeration {
                            enum 1                              { value 1; }
                            enum 2                              { value 2; }
                        }
                        description "ISIS protocol level number";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/type
                    leaf type {
                        type enumeration {
                            enum internal                       { value 1; }
                            enum external                       { value 2; }
                        }
                        description "The value indicates the type of route represented by this row entry.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/locator-flags
                    leaf locator-flags {
                        type bits {
                            bit bit-d                          { position 0; }
                        }
                        description
                            "The value indicates the flags advertised in the SRv6 Locator TLV.

                             bit-d   (0)  - Down flag.  If set, then the Locator has been leaked 
                                 from Level-2 to Level-1 (only downwards, not upwards to prevent
                                 looping).";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/algorithm
                    leaf algorithm {
                        type int32 {
                            range "0|128..255";
                        }
                        description "The value indicates the algorithm related to the SID.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/admin-tag
                    leaf admin-tag {
                        type uint32;
                        description "The value indicates the administrative tag advertised in the sub-TLV.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/attribute-flags
                    leaf attribute-flags {
                        type bits {
                            bit bit-x                          { position 0; }
                            bit bit-r                          { position 1; }
                            bit bit-n                          { position 2; }
                            bit bit-e                          { position 3; }
                            bit bit-a                          { position 4; }
                        }
                        description
                            "The value indicates the Prefix Attribute Flags advertised in the sub-TLV.

                             bit-x   (0)  - External Prefix flag. If set, then the prefix
                                           has been redistributed from another protocol.
                             bit-r   (1)  - Re-advertisement flag.  If set, then the prefix 
                                           has been leaked from one level to another (upwards or downwards).
                             bit-n   (2)  - Node flag. If set, then the prefix identifies the 
                                           advertising router. The advertising router may choose to not set
                                           this flag.
                             bit-e   (3)  - ELC flag. If set, then the local host prefix supports 
                                           Entropy Label Capability (ELC) on all interfaces. 
                             bit-a   (4)  - Anycast flag. If set, then the prefix/SRv6 locator
                                           is configured as anycast.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/un-sid
                    list un-sid {
                        key "sid";
                        description "Enter the un-sid list instance";

                        ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/un-sid/sid
                        leaf sid {
                            type types-sros:ipv6-address;
                            description "The value specifies the IPv6 address of the uN SID.";
                        }

                        ///nokia-state/state/router/isis/segment-routing-v6/micro-segment-locator-state/un-sid/endpoint-behavior
                        leaf endpoint-behavior {
                            type types-isis:srv6-un-endpoint-behavior-type;
                            description "The value indicates the SRv6 endpoint behavior advertised in the SID sub-TLV.";
                        }

                    } // list un-sid

                } // list micro-segment-locator-state

                ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error
                container last-sid-error {
                    description "Enter the last-sid-error context";

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/type
                    leaf type {
                        type enumeration {
                            enum duplicate-sid                  { value 1; }
                            enum nexthop-ies                    { value 2; }
                            enum algo-not-supported             { value 3; }
                            enum proto-not-supported            { value 4; }
                            enum flags-not-supported            { value 5; }
                            enum no-resource                    { value 6; }
                        }
                        description "The value indicates the error type that last occured.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/multi-topology-id
                    leaf multi-topology-id {
                        type uint32;
                        description
                            "The value specifies the multi-topology id number for the end-sid.
                             If multi-topology is not supported for the end-sid then
                             the value should be 0.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/prefix
                    leaf prefix {
                        type types-sros:ip-prefix;
                        description "The value specifies the IP address and mask of the sid.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/advertising-system-id
                    leaf advertising-system-id {
                        type types-igp:system-id;
                        description
                            "The value specifies the system-id of the advertising
                             IS through which this SID is reachable.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/level-number
                    leaf level-number {
                        type enumeration {
                            enum 1                              { value 1; }
                            enum 2                              { value 2; }
                        }
                        description "Specifies the IS-IS protocol level to which these attributes are applied.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/flex-algo-id
                    leaf flex-algo-id {
                        type uint32;
                        description "The value specifies the flexible algorithm.";
                    }

                    ///nokia-state/state/router/isis/segment-routing-v6/last-sid-error/last-occurrence
                    leaf last-occurrence {
                        type yang:date-and-time;
                        description "Indicates the timestamp of the last time the error was detected.";
                    }

                } // container last-sid-error

            } // container segment-routing-v6

            ///nokia-state/state/router/isis/interface
            list interface {
                key "interface-name";
                description "Enter the interface list instance";

                ///nokia-state/state/router/isis/interface/interface-name
                leaf interface-name {
                    type types-sros:interface-name;
                    description "Router interface name";
                }

                ///nokia-state/state/router/isis/interface/oper-state
                leaf oper-state {
                    type types-sros:oper-state;
                    description "Indicates the current operational state of IS-IS protocol on this interface.";
                }

                ///nokia-state/state/router/isis/interface/mtu
                leaf mtu {
                    type uint32;
                    description
                        "Indicates the operational size of the largest packet which can be
                         sent/received on this IS-IS interface, specified in octets.
                         This size does not include the underlying layer headers/trailers.";
                }

                ///nokia-state/state/router/isis/interface/circuit-index
                leaf circuit-index {
                    type uint32 {
                        range "1..2000000000";
                    }
                    description "Indicates a cross reference index to the isis circ table.";
                }

                ///nokia-state/state/router/isis/interface/oper-type
                leaf oper-type {
                    type types-isis:interface-type;
                    description "Indicates the operational type on this IS-IS interface.";
                }

                ///nokia-state/state/router/isis/interface/ber-state
                leaf ber-state {
                    type enumeration {
                        enum none                           { value 0; }
                        enum sd                             { value 1; }
                        enum sf                             { value 2; }
                    }
                    description "Indicates the Bit Error Rate (BER) state of this interface.";
                }

                ///nokia-state/state/router/isis/interface/te-metric
                leaf te-metric {
                    type types-isis:oper-metric;
                    description
                        "Indicates the MPLS TE metric configured for this interface.
                         This metric is flooded out in the TE metric sub-tlv in the IS-IS LSPs.
                         Depending on the configuration, either the TE metric value or the
                         native IS-IS metric values are used in CSPF computations.";
                }

                ///nokia-state/state/router/isis/interface/te-state
                leaf te-state {
                    type types-sros:oper-state;
                    description "Indicates the MPLS interface TE status from the IS-IS standpoint.";
                }

                ///nokia-state/state/router/isis/interface/point-to-point-circuit-id
                leaf point-to-point-circuit-id {
                    type types-isis:circuit-id;
                    description "Indicates the ID of the circuit allocated during initialization.";
                }

                ///nokia-state/state/router/isis/interface/up-time
                leaf up-time {
                    type int32;
                    units "seconds";
                    description
                        "If the circuit is up, indicates the amount of time in seconds since this circuit entered state 'up'.

                         If the circuit is not up, indicates the number of seconds since the circuit was up,
                         or since the system started, if the circuit has never been up.";
                }

                ///nokia-state/state/router/isis/interface/statistics
                container statistics {
                    description "Enter the statistics context";

                    ///nokia-state/state/router/isis/interface/statistics/initialization-failures
                    leaf initialization-failures {
                        type yang:counter32;
                        description "Indicates the number of times initialization of this circuit has failed.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/adjacency-state-change
                    leaf adjacency-state-change {
                        type yang:counter32;
                        description "Indicates the number of times an adjacency state change has occurred on this circuit.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/adjacency-rejection
                    leaf adjacency-rejection {
                        type yang:counter32;
                        description "Indicates the number of times an adjacency has been rejected on this circuit.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/control-pdu-sent
                    leaf control-pdu-sent {
                        type yang:counter32;
                        description "Indicates the number of IS-IS control PDUs sent on this circuit.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/control-pdu-received
                    leaf control-pdu-received {
                        type yang:counter32;
                        description "Indicates the number of IS-IS control PDUs received on this circuit.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/control-pdu-id-length-mismatch-received
                    leaf control-pdu-id-length-mismatch-received {
                        type yang:counter32;
                        description
                            "Indicates the number an IS-IS control PDU with an ID
                             field length different to that for this system has been received.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/max-area-address-mismatches
                    leaf max-area-address-mismatches {
                        type yang:counter32;
                        description
                            "Number of times an IS-IS control PDU with a max area address field
                             different from that for this system has been received. MIB Entry:
                             CircMaxAreaAddrMismatches.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/area-address-mismatches
                    leaf area-address-mismatches {
                        type yang:counter32;
                        description
                            "Number of times an IS-IS control PDU with no area address common
                             with this system has been received. MIB Entry:
                             CircMaxAreaAddrMismatches.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/auth-type-fails
                    leaf auth-type-fails {
                        type yang:counter32;
                        description
                            "Number of times an IS-IS control PDU with an auth type field different
                             from that for this system has been received. MIB Entry:
                             CircAuthTypeFails.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/auth-fails
                    leaf auth-fails {
                        type yang:counter32;
                        description
                            "Number of times an IS-IS control PDU with the correct auth type has
                             failed to pass authentication validation. MIB Entry: CircAuthFails.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/lan-dis-changes
                    leaf lan-dis-changes {
                        type yang:counter32;
                        description
                            "Number of times the Designated IS has changed on this circuit at this
                             level. If the circuit is point to point, this count is zero. MIB Entry:
                             CircLANDesISChanges.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/end-x-install-failures
                    leaf end-x-install-failures {
                        type yang:counter32;
                        description
                            "Number of times an end-x could not be installed on this circuit due to
                             resource problems.";
                    }

                    ///nokia-state/state/router/isis/interface/statistics/adj-number
                    leaf adj-number {
                        type uint32;
                        description
                            "Number of adjacencies on this circuit.
                             MIB Entry: CircNumAdj.";
                    }

                } // container statistics

                ///nokia-state/state/router/isis/interface/ldp-sync
                container ldp-sync {
                    description "Enter the ldp-sync context";

                    ///nokia-state/state/router/isis/interface/ldp-sync/state
                    leaf state {
                        type types-sros:oper-state;
                        description "Indicates if IGP-LDP synchronization is enabled on this interface.";
                    }

                    ///nokia-state/state/router/isis/interface/ldp-sync/max-metric
                    leaf max-metric {
                        type boolean;
                        description "Indicates if IS-IS advertised maximum metric value is enabled on this interface.";
                    }

                    ///nokia-state/state/router/isis/interface/ldp-sync/timer-state
                    leaf timer-state {
                        type enumeration {
                            enum wait-for-ldp-adj               { value 1; }
                            enum timer-active                   { value 2; }
                            enum ldp-exchg-done                 { value 3; }
                            enum timer-expired                  { value 4; }
                            enum manual-exit                    { value 5; }
                            enum disabled                       { value 6; }
                        }
                        description "Indicates the state of the time-left on this IS-IS interface.";
                    }

                    ///nokia-state/state/router/isis/interface/ldp-sync/time-left
                    leaf time-left {
                        type uint32 {
                            range "0..1800";
                        }
                        units "seconds";
                        description
                            "Indicates the time left before IS-IS reverts back to advertising the normal metric for
                             this interface. This is applicable only when max-metric is 'true'.";
                    }

                } // container ldp-sync

                ///nokia-state/state/router/isis/interface/ipv4-shared-sid
                container ipv4-shared-sid {
                    description "Enter the ipv4-shared-sid context";

                    ///nokia-state/state/router/isis/interface/ipv4-shared-sid/type
                    choice type {
                        ///nokia-state/state/router/isis/interface/ipv4-shared-sid/type/label
                        case label {

                            ///nokia-state/state/router/isis/interface/ipv4-shared-sid/type/label/label
                            leaf label {
                                type int64 {
                                    range "1..4294967295";
                                }
                                description "Specifies IPvX node SID label for this interface.";
                            }

                        }
                        ///nokia-state/state/router/isis/interface/ipv4-shared-sid/type/index
                        case index {

                            ///nokia-state/state/router/isis/interface/ipv4-shared-sid/type/index/index
                            leaf index {
                                type int64 {
                                    range "0..4294967295";
                                }
                                description "Specifies IPvX node SID index for this interface.";
                            }

                        }
                    }
                } // container ipv4-shared-sid

                ///nokia-state/state/router/isis/interface/ipv6-shared-sid
                container ipv6-shared-sid {
                    description "Enter the ipv6-shared-sid context";

                    ///nokia-state/state/router/isis/interface/ipv6-shared-sid/type
                    choice type {
                        ///nokia-state/state/router/isis/interface/ipv6-shared-sid/type/label
                        case label {

                            ///nokia-state/state/router/isis/interface/ipv6-shared-sid/type/label/label
                            leaf label {
                                type int64 {
                                    range "1..4294967295";
                                }
                                description "Specifies IPvX node SID label for this interface.";
                            }

                        }
                        ///nokia-state/state/router/isis/interface/ipv6-shared-sid/type/index
                        case index {

                            ///nokia-state/state/router/isis/interface/ipv6-shared-sid/type/index/index
                            leaf index {
                                type int64 {
                                    range "0..4294967295";
                                }
                                description "Specifies IPvX node SID index for this interface.";
                            }

                        }
                    }
                } // container ipv6-shared-sid

                ///nokia-state/state/router/isis/interface/level
                list level {
                    key "level-number";
                    description "Enter the level list instance";

                    ///nokia-state/state/router/isis/interface/level/level-number
                    leaf level-number {
                        type enumeration {
                            enum 1                              { value 1; }
                            enum 2                              { value 2; }
                        }
                        description "ISIS protocol level number";
                    }

                    ///nokia-state/state/router/isis/interface/level/adjacencies-number
                    leaf adjacencies-number {
                        type uint32;
                        description "Indicates the number of adjacencies on this particular level of the interface.";
                    }

                    ///nokia-state/state/router/isis/interface/level/designated-intermediate-system
                    leaf designated-intermediate-system {
                        type types-igp:system-id;
                        description "Indicates the ID of the LAN Designated Intermediate System on this circuit at this level.";
                    }

                    ///nokia-state/state/router/isis/interface/level/lsp-transmit-queue-count
                    leaf lsp-transmit-queue-count {
                        type uint32;
                        description "Indicates how many LSPs are in the transmit queue of this interface for this IS-IS level.";
                    }

                    ///nokia-state/state/router/isis/interface/level/circuit-id
                    leaf circuit-id {
                        type types-isis:circuit-id;
                        description "Indicates the ID of the circuit allocated during initialization.";
                    }

                    ///nokia-state/state/router/isis/interface/level/oper-metric
                    container oper-metric {
                        description "Enter the oper-metric context";

                        ///nokia-state/state/router/isis/interface/level/oper-metric/ipv4-unicast
                        leaf ipv4-unicast {
                            type types-isis:oper-metric;
                            description "Indicates the operational value of the IPv4 unicast metric being used with this interface level.";
                        }

                        ///nokia-state/state/router/isis/interface/level/oper-metric/ipv6-unicast
                        leaf ipv6-unicast {
                            type types-isis:oper-metric;
                            description "Indicates the operational value of the IPv6 unicast metric being used with this interface level.";
                        }

                        ///nokia-state/state/router/isis/interface/level/oper-metric/ipv4-multicast
                        leaf ipv4-multicast {
                            type types-isis:oper-metric;
                            description "Indicates the operational value of the interface level metric for IPv4 multicast.";
                        }

                        ///nokia-state/state/router/isis/interface/level/oper-metric/ipv6-multicast
                        leaf ipv6-multicast {
                            type types-isis:oper-metric;
                            description "Indicates the operational value of the interface level metric for IPv6 multicast.";
                        }

                    } // container oper-metric

                    ///nokia-state/state/router/isis/interface/level/statistics
                    container statistics {
                        description "Enter the statistics context";

                        ///nokia-state/state/router/isis/interface/level/statistics/designated-intermediate-system-changes
                        leaf designated-intermediate-system-changes {
                            type yang:counter32;
                            description "Indicates the number of times the LAN Designated Intermediate System has changed at this level.";
                        }

                        ///nokia-state/state/router/isis/interface/level/statistics/packets
                        list packets {
                            key "direction";
                            description "Enter the packets list instance";

                            ///nokia-state/state/router/isis/interface/level/statistics/packets/direction
                            leaf direction {
                                type enumeration {
                                    enum sending                        { value 1; }
                                    enum receiving                      { value 2; }
                                }
                                description "Were we sending or receiving these PDUs?";
                            }

                            ///nokia-state/state/router/isis/interface/level/statistics/packets/hello
                            leaf hello {
                                type yang:counter32;
                                description
                                    "The number of IS-IS Hello PDUs seen in this
                                     direction at this level.";
                            }

                            ///nokia-state/state/router/isis/interface/level/statistics/packets/lsp
                            leaf lsp {
                                type yang:counter32;
                                description
                                    "The number of IS-IS LSPs seen in this
                                     direction at this level.";
                            }

                            ///nokia-state/state/router/isis/interface/level/statistics/packets/csnp
                            leaf csnp {
                                type yang:counter32;
                                description
                                    "The number of IS-IS CSNPs seen in this
                                     direction at this level.";
                            }

                            ///nokia-state/state/router/isis/interface/level/statistics/packets/psnp
                            leaf psnp {
                                type yang:counter32;
                                description
                                    "The number of IS-IS PSNPs seen in this
                                     direction at this level.";
                            }

                        } // list packets

                    } // container statistics

                } // list level

                ///nokia-state/state/router/isis/interface/adjacency
                list adjacency {
                    key "adjacency-index";
                    description "Enter the adjacency list instance";

                    ///nokia-state/state/router/isis/interface/adjacency/adjacency-index
                    leaf adjacency-index {
                        type int32 {
                            range "1..2000000000";
                        }
                        description
                            "A unique value identifying the IS adjacency from all
                             other such adjacencies on this circuit. This value is
                             assigned by the system when the adjacency is created
                             automatically.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/oper-state
                    leaf oper-state {
                        type enumeration {
                            enum initializing                   { value 1; }
                            enum up                             { value 2; }
                            enum failed                         { value 3; }
                            enum down                           { value 4; }
                        }
                        description "The state of the adjacency";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/usage
                    leaf usage {
                        type enumeration {
                            enum undefined                      { value 1; }
                            enum level1                         { value 2; }
                            enum level2                         { value 3; }
                            enum level1and2                     { value 4; }
                        }
                        description
                            "An adjacency of type level1 is used for level 1
                             traffic only. An adjacency of type level2 is used
                             for level 2 traffic only. An adjacency of type level1and2
                             is used for both level 1 and level 2 traffic. There
                             may be two adjacencies (of types level1 and level2)
                             between the same pair of Intermediate Systems.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/hold-timer
                    leaf hold-timer {
                        type int32 {
                            range "1..65535";
                        }
                        units "seconds";
                        description
                            "The holding time for this adjacency updated from
                             received IIH PDUs.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/uptime
                    leaf uptime {
                        type int32;
                        units "seconds";
                        description
                            "If the adjacency is up, the amount of time in seconds
                             since this adjacency entered state 'up'.  If the adjacency
                             is not up, the number of seconds since the adjacency was
                             up, or since the system started, if the adjacency has
                             never been up.

                             Note: This can be implemented as start time less
                             the current time.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/expires-in
                    leaf expires-in {
                        type int32 {
                            range "0..65535";
                        }
                        units "seconds";
                        description "The value indicates the time in which the adjacency will expire if no hello packets are received.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/level
                    leaf level {
                        type enumeration {
                            enum level1                         { value 1; }
                            enum level2                         { value 2; }
                            enum level1-l2                      { value 3; }
                            enum unknown                        { value 4; }
                        }
                        description "The value indicates the circuit type of the adjacency as advertised.";
                    }

                    ///nokia-state/state/router/isis/interface/adjacency/restart
                    container restart {
                        description "Enter the restart context";

                        ///nokia-state/state/router/isis/interface/adjacency/restart/support
                        leaf support {
                            type boolean;
                            description
                                "The value indicates whether adjacency supports ISIS graceful restart.

                                 If support has a value of 'true' the adjacency
                                 supports graceful restart.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/restart/status
                        leaf status {
                            type enumeration {
                                enum not-helping                    { value 1; }
                                enum restarting                     { value 2; }
                                enum restart-complete               { value 3; }
                                enum helping                        { value 4; }
                                enum aborted                        { value 5; }
                            }
                            description "The value indicates the graceful restart status of the adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/restart/suppressed
                        leaf suppressed {
                            type boolean;
                            description
                                "The value indicates if the adjacency has requested this router to suppress advertisement of
                                 the adjacency in this router's LSPs.

                                 If suppressed has a value of 'true' the adjacency
                                 has requested to suppress advertisement of the LSPs.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/restart/num-restarts
                        leaf num-restarts {
                            type uint32;
                            description "The value indicates the number of times the adjacency has attempted restart.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/restart/last-restart
                        leaf last-restart {
                            type yang:date-and-time;
                            description "The value indicates the last time the adjacency attempted restart.";
                        }

                    } // container restart

                    ///nokia-state/state/router/isis/interface/adjacency/neighbor
                    container neighbor {
                        description "Enter the neighbor context";

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/snpa-address
                        leaf snpa-address {
                            type types-isis:snpa-address;
                            description "The SNPA address of the neighboring system.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/system-type
                        leaf system-type {
                            type enumeration {
                                enum l1-is                          { value 1; }
                                enum l2-is                          { value 2; }
                                enum l1-l2-is                       { value 3; }
                                enum unknown                        { value 4; }
                            }
                            description "The type of the neighboring system.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/system-id
                        leaf system-id {
                            type string {
                                length "0..24";
                            }
                            description
                                "The system ID and 4 byte circuit ID of the
                                 neighboring Intermediate System set from
                                 the source ID field of the Three-Way-Handshake
                                 information from the neighbor's IIH PDUs.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/priority
                        leaf priority {
                            type int32 {
                                range "0..127";
                            }
                            description
                                "Priority of the neighboring Intermediate System for
                                 becoming the LAN Level 1 Designated Intermediate System
                                 if the value of isisISAdjNeighSysType is
                                 L1IntermediateSystem or LAN Level 2 Designated
                                 Intermediate System if the value of
                                 isisISAdjNeighSysType is L2IntermediateSystem.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/ipv4
                        leaf ipv4 {
                            type types-sros:ipv4-address;
                            description "The value indicates the ip-address of the neighbor with which adjacency is formed.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/neighbor/ipv6
                        leaf ipv6 {
                            type types-sros:ipv6-address;
                            description
                                "The value indicates the IP address of the neighbor with which an IPv6-adjacency is formed
                                 this will always be an IPv6 address.";
                        }

                    } // container neighbor

                    ///nokia-state/state/router/isis/interface/adjacency/multi-topology
                    container multi-topology {
                        description "Enter the multi-topology context";

                        ///nokia-state/state/router/isis/interface/adjacency/multi-topology/enabled
                        leaf enabled {
                            type boolean;
                            description
                                "The value indicates if the ISIS multi-topology protocol is supported on the neighbor.

                                 If the value is 'true', ISIS multi-topology
                                 protocol is enabled on the neighbor.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id0
                        container id0 {
                            description "Enter the id0 context";

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id0/enabled
                            leaf enabled {
                                type boolean;
                                description
                                    "The value indicates if the MT x IPvx topology is supported on the neighbor.

                                     If the value of enable is 'true', MT x IPvx topology is
                                     supported on the neighbor.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id0/bfd-required
                            leaf bfd-required {
                                type boolean;
                                description
                                    "The value indicates if BFD session is required for this Multi Topology before bringing the
                                     adjacency to FULL state, as described in RFC6213.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id0/bfd-usable
                            leaf bfd-usable {
                                type boolean;
                                description
                                    "The value indicates if BFD session for this Multi Topology is usable, that is either not
                                     required or in state UP, as described in RFC6213.";
                            }

                        } // container id0

                        ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id2
                        container id2 {
                            description "Enter the id2 context";

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id2/enabled
                            leaf enabled {
                                type boolean;
                                description
                                    "The value indicates if the MT x IPvx topology is supported on the neighbor.

                                     If the value of enable is 'true', MT x IPvx topology is
                                     supported on the neighbor.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id2/bfd-required
                            leaf bfd-required {
                                type boolean;
                                description
                                    "The value indicates if BFD session is required for this Multi Topology before bringing the
                                     adjacency to FULL state, as described in RFC6213.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id2/bfd-usable
                            leaf bfd-usable {
                                type boolean;
                                description
                                    "The value indicates if BFD session for this Multi Topology is usable, that is either not
                                     required or in state UP, as described in RFC6213.";
                            }

                        } // container id2

                        ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id3
                        container id3 {
                            description "Enter the id3 context";

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id3/enabled
                            leaf enabled {
                                type boolean;
                                description
                                    "The value indicates if the MT x IPvx topology is supported on the neighbor.

                                     If the value of enable is 'true', MT x IPvx topology is
                                     supported on the neighbor.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id3/bfd-required
                            leaf bfd-required {
                                type boolean;
                                description
                                    "The value indicates if BFD session is required for this Multi Topology before bringing the
                                     adjacency to FULL state, as described in RFC6213.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id3/bfd-usable
                            leaf bfd-usable {
                                type boolean;
                                description
                                    "The value indicates if BFD session for this Multi Topology is usable, that is either not
                                     required or in state UP, as described in RFC6213.";
                            }

                        } // container id3

                        ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id4
                        container id4 {
                            description "Enter the id4 context";

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id4/enabled
                            leaf enabled {
                                type boolean;
                                description
                                    "The value indicates if the MT x IPvx topology is supported on the neighbor.

                                     If the value of enable is 'true', MT x IPvx topology is
                                     supported on the neighbor.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id4/bfd-required
                            leaf bfd-required {
                                type boolean;
                                description
                                    "The value indicates if BFD session is required for this Multi Topology before bringing the
                                     adjacency to FULL state, as described in RFC6213.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/multi-topology/id4/bfd-usable
                            leaf bfd-usable {
                                type boolean;
                                description
                                    "The value indicates if BFD session for this Multi Topology is usable, that is either not
                                     required or in state UP, as described in RFC6213.";
                            }

                        } // container id4

                    } // container multi-topology

                    ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4
                    container sr-ipv4 {
                        description "Enter the sr-ipv4 context";

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/sid-type
                        leaf sid-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum index                          { value 1; }
                                enum mpls-label                     { value 2; }
                                enum ipv6-label                     { value 3; }
                            }
                            description "The value indicates how the value of sid-value shall be interpreted.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/sid-value
                        leaf sid-value {
                            type uint32;
                            description "The value indicates the IPvx SID label or index for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/sid-protected
                        leaf sid-protected {
                            type boolean;
                            description "The value of the object sid-protected indicates the if the SID for this adjacency is eligible for protection.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/secondary-sid-type
                        leaf secondary-sid-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum index                          { value 1; }
                                enum mpls-label                     { value 2; }
                                enum ipv6-label                     { value 3; }
                            }
                            description "the value of secondary-sid-type indicates how the value of secondary-sid-value shall be interpreted.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/secondary-sid-value
                        leaf secondary-sid-value {
                            type uint32;
                            description "the value of the object sid-value indicates the secondary SID label or index for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/secondary-sid-protected
                        leaf secondary-sid-protected {
                            type boolean;
                            description "The value of the object secondary-sid-protected indicates the if the secondary SID for this adjacency is eligible for protection.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/secondary-sid-mtu
                        leaf secondary-sid-mtu {
                            type uint32;
                            description "The MTU of the link used by this adjacency using the secondary sid.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/sid-hold-timer
                        leaf sid-hold-timer {
                            type int32 {
                                range "0..65535";
                            }
                            units "seconds";
                            description "The remaining holding time for this adjacency-sid.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/sid-retry-timer
                        leaf sid-retry-timer {
                            type int32 {
                                range "0..65535";
                            }
                            units "seconds";
                            description
                                "The remaining time before allocating an adjacency-sid in
                                 case the previous allocation failed";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/pgid
                        leaf pgid {
                            type uint32;
                            description "The value indicates the PGID for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/mtu
                        leaf mtu {
                            type uint32;
                            description "The MTU of the link used by this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-nhop
                        leaf lfa-nhop {
                            type types-sros:ip-address;
                            description
                                "The value indicates the ip-address of the neighbor with which adjacency
                                 has formed a backup.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-interface
                        leaf lfa-interface {
                            type types-sros:interface-name;
                            description "The value specifies the interface index of the outgoing interface for the adjacency backup.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-tunnel-type
                        leaf lfa-tunnel-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum rsvp                           { value 1; }
                                enum ldp                            { value 2; }
                            }
                            description "Type of tunnel used for LFA";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-tunnel-id
                        leaf lfa-tunnel-id {
                            type types-sros:tunnel-id;
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-mtu
                        leaf lfa-mtu {
                            type uint32;
                            description "The MTU of the backup link attached to this entry.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-type
                        leaf lfa-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum lfa                            { value 1; }
                                enum rlfa                           { value 2; }
                                enum tilfa                          { value 3; }
                            }
                            description "LFA run that resulted in this backup";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-num-labels
                        leaf lfa-num-labels {
                            type uint32;
                            description "The value indicates the number of backup labels.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/mtu-sr
                        leaf mtu-sr {
                            type uint32;
                            description
                                "The MTU of the adj-sid tunnel. This value takes into account the lowest
                                 value of the primary & backup mtu, the label overhead and the segment-routing
                                 tunnel-mtu";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-label-stack
                        list lfa-label-stack {
                            key "label-index";
                            description "Enter the lfa-label-stack list instance";

                            ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-label-stack/label-index
                            leaf label-index {
                                type uint32;
                                description
                                    "An adjacency can have a backup label stack.
                                     Label-index 0 indicates the first label which can be a destination
                                     node-sid , a node-sid towards a P or PQ node or an adj-sid to a
                                     Q node. The last label always indicates the destination label
                                     unless PHP is enabled.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/sr-ipv4/lfa-label-stack/label
                            leaf label {
                                type uint32;
                                description
                                    "A label from an adjacency backup. The label can be a destination
                                     node-sid, an adj-sid or a node-sid towards a P or PQ node.";
                            }

                        } // list lfa-label-stack

                    } // container sr-ipv4

                    ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6
                    container sr-ipv6 {
                        description "Enter the sr-ipv6 context";

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/sid-type
                        leaf sid-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum index                          { value 1; }
                                enum mpls-label                     { value 2; }
                                enum ipv6-label                     { value 3; }
                            }
                            description "The value indicates how the value of sid-value shall be interpreted.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/sid-value
                        leaf sid-value {
                            type uint32;
                            description "The value indicates the IPvx SID label or index for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/sid-protected
                        leaf sid-protected {
                            type boolean;
                            description "The value of the object sid-protected indicates the if the SID for this adjacency is eligible for protection.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/secondary-sid-type
                        leaf secondary-sid-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum index                          { value 1; }
                                enum mpls-label                     { value 2; }
                                enum ipv6-label                     { value 3; }
                            }
                            description "the value of secondary-sid-type indicates how the value of secondary-sid-value shall be interpreted.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/secondary-sid-value
                        leaf secondary-sid-value {
                            type uint32;
                            description "the value of the object sid-value indicates the secondary SID label or index for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/secondary-sid-protected
                        leaf secondary-sid-protected {
                            type boolean;
                            description "The value of the object secondary-sid-protected indicates the if the secondary SID for this adjacency is eligible for protection.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/secondary-sid-mtu
                        leaf secondary-sid-mtu {
                            type uint32;
                            description "The MTU of the link used by this adjacency using the secondary sid.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/sid-hold-timer
                        leaf sid-hold-timer {
                            type int32 {
                                range "0..65535";
                            }
                            units "seconds";
                            description "The remaining holding time for this adjacency-sid.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/sid-retry-timer
                        leaf sid-retry-timer {
                            type int32 {
                                range "0..65535";
                            }
                            units "seconds";
                            description
                                "The remaining time before allocating an adjacency-sid in
                                 case the previous allocation failed";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/pgid
                        leaf pgid {
                            type uint32;
                            description "The value indicates the PGID for this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/mtu
                        leaf mtu {
                            type uint32;
                            description "The MTU of the link used by this adjacency.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-nhop
                        leaf lfa-nhop {
                            type types-sros:ip-address;
                            description
                                "The value indicates the ip-address of the neighbor with which adjacency
                                 has formed a backup.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-interface
                        leaf lfa-interface {
                            type types-sros:interface-name;
                            description "The value specifies the interface index of the outgoing interface for the adjacency backup.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-tunnel-type
                        leaf lfa-tunnel-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum rsvp                           { value 1; }
                                enum ldp                            { value 2; }
                            }
                            description "Type of tunnel used for LFA";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-tunnel-id
                        leaf lfa-tunnel-id {
                            type types-sros:tunnel-id;
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-mtu
                        leaf lfa-mtu {
                            type uint32;
                            description "The MTU of the backup link attached to this entry.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-type
                        leaf lfa-type {
                            type enumeration {
                                enum none                           { value 0; }
                                enum lfa                            { value 1; }
                                enum rlfa                           { value 2; }
                                enum tilfa                          { value 3; }
                            }
                            description "LFA run that resulted in this backup";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-num-labels
                        leaf lfa-num-labels {
                            type uint32;
                            description "The value indicates the number of backup labels.";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/mtu-sr
                        leaf mtu-sr {
                            type uint32;
                            description
                                "The MTU of the adj-sid tunnel. This value takes into account the lowest
                                 value of the primary & backup mtu, the label overhead and the segment-routing
                                 tunnel-mtu";
                        }

                        ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-label-stack
                        list lfa-label-stack {
                            key "label-index";
                            description "Enter the lfa-label-stack list instance";

                            ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-label-stack/label-index
                            leaf label-index {
                                type uint32;
                                description
                                    "An adjacency can have a backup label stack.
                                     Label-index 0 indicates the first label which can be a destination
                                     node-sid , a node-sid towards a P or PQ node or an adj-sid to a
                                     Q node. The last label always indicates the destination label
                                     unless PHP is enabled.";
                            }

                            ///nokia-state/state/router/isis/interface/adjacency/sr-ipv6/lfa-label-stack/label
                            leaf label {
                                type uint32;
                                description
                                    "A label from an adjacency backup. The label can be a destination
                                     node-sid, an adj-sid or a node-sid towards a P or PQ node.";
                            }

                        } // list lfa-label-stack

                    } // container sr-ipv6

                    ///nokia-state/state/router/isis/interface/adjacency/area-address
                    list area-address {
                        key "area-address";
                        description "Enter the area-address list instance";

                        ///nokia-state/state/router/isis/interface/adjacency/area-address/area-address
                        leaf area-address {
                            type types-isis:area-address;
                            description
                                "An area address reported in a Level 1 LSP received by
                                 this instance of the protocol.";
                        }

                    } // list area-address

                    ///nokia-state/state/router/isis/interface/adjacency/supported-protocol
                    list supported-protocol {
                        key "protocol";
                        description "Enter the supported-protocol list instance";

                        ///nokia-state/state/router/isis/interface/adjacency/supported-protocol/protocol
                        leaf protocol {
                            type enumeration {
                                enum iso8473                        { value 129; }
                                enum ipv6                           { value 142; }
                                enum ip                             { value 204; }
                            }
                            description
                                "One supported protocol as reported in IIH PDUs received
                                 from the neighbor.";
                        }

                    } // list supported-protocol

                } // list adjacency

                ///nokia-state/state/router/isis/interface/admin-group
                list admin-group {
                    key "group-name";
                    description "Enter the admin-group list instance";

                    ///nokia-state/state/router/isis/interface/admin-group/group-name
                    leaf group-name {
                        type types-sros:named-item;
                        description
                            "Indicates the interface admin-goup inherited from MPLS interface.
                             It identifies the admin groups to which the interface belongs.";
                    }

                } // list admin-group

            } // list interface

            ///nokia-state/state/router/isis/level
            list level {
                key "level-number";
                description "Enter the level list instance";

                ///nokia-state/state/router/isis/level/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/level/oper-lsp-mtu-size
                leaf oper-lsp-mtu-size {
                    type int32;
                    description "Indicates the operational size of Level 1 LSPs and SNPs originated by this instance.";
                }

                ///nokia-state/state/router/isis/level/total-exported-routes
                leaf total-exported-routes {
                    type yang:counter32;
                    description
                        "Indicates the total number of routes exported into ISIS level 1 from the route table manager
                         when an export policy is configured";
                }

                ///nokia-state/state/router/isis/level/lsps
                leaf lsps {
                    type uint32;
                    description "Indicates the number of LSPs existing in the system for the particular level.";
                }

                ///nokia-state/state/router/isis/level/max-oper-lsp-mtu-size
                leaf max-oper-lsp-mtu-size {
                    type int32;
                    description
                        "Indicates the maximum size of LSPs and SNPs that can be originated on
                         any circuit by this instance for the particular level.";
                }

                ///nokia-state/state/router/isis/level/overload
                container overload {
                    description "Enter the overload context";

                    ///nokia-state/state/router/isis/level/overload/status
                    leaf status {
                        type types-isis:overload-status;
                        description "Indicates whether or not this level is in overload state.";
                    }

                    ///nokia-state/state/router/isis/level/overload/time-left
                    leaf time-left {
                        type types-sros:time-interval;
                        units "deciseconds";
                        description
                            "Indicates the remaining time, measured in units of deciseconds, before this level
                             will attempt to enter its normal state.";
                    }

                } // container overload

            } // list level

            ///nokia-state/state/router/isis/link-group
            list link-group {
                key "link-group-name";
                description "Enter the link-group list instance";

                ///nokia-state/state/router/isis/link-group/link-group-name
                leaf link-group-name {
                    type types-sros:named-item;
                    description "Link group name for the IS-IS protocol";
                }

                ///nokia-state/state/router/isis/link-group/level
                list level {
                    key "level-number";
                    description "Enter the level list instance";

                    ///nokia-state/state/router/isis/link-group/level/level-number
                    leaf level-number {
                        type enumeration {
                            enum 1                              { value 1; }
                            enum 2                              { value 2; }
                        }
                        description "ISIS protocol level number";
                    }

                    ///nokia-state/state/router/isis/link-group/level/oper-state
                    leaf oper-state {
                        type enumeration {
                            enum normal                         { value 1; }
                            enum offset-applied                 { value 2; }
                        }
                        description "The value indicates the state of the link group at this IS-IS level.";
                    }

                    ///nokia-state/state/router/isis/link-group/level/oper-oper-members
                    leaf oper-oper-members {
                        type uint32;
                        description
                            "The value indicates the operational value of the number of operational links below which the
                             metric of the member interfaces is increased by the configured offsets.";
                    }

                    ///nokia-state/state/router/isis/link-group/level/oper-revert-members
                    leaf oper-revert-members {
                        type uint32;
                        description
                            "The value indicates the operational value of the minimum number of links that must be
                             operational after the offsets were applied in order for the metrics of
                             the member interfaces to be returned to normal.";
                    }

                    ///nokia-state/state/router/isis/link-group/level/members-count
                    leaf members-count {
                        type uint32;
                        description
                            "The value indicates the number of interfaces that are a member of the
                             link group indicated by name at this IS-IS level.";
                    }

                    ///nokia-state/state/router/isis/link-group/level/active-members
                    leaf active-members {
                        type uint32;
                        description
                            "The value indicates the number of active interfaces that are a member
                             of the link group indicated by name at this IS-IS level.";
                    }

                    ///nokia-state/state/router/isis/link-group/level/member
                    list member {
                        key "interface-name";
                        description "Add a list entry for member";

                        ///nokia-state/state/router/isis/link-group/level/member/interface-name
                        leaf interface-name {
                            type leafref {
                                path "../../../../interface/interface-name";
                            }
                            description "Router interface name for this link group";
                        }

                        ///nokia-state/state/router/isis/link-group/level/member/oper-state
                        leaf oper-state {
                            type enumeration {
                                enum up                             { value 1; }
                                enum down                           { value 2; }
                                enum bit-error-rate                 { value 3; }
                            }
                            description
                                "The value indicates the state of this interface at this IS-IS level associated
                                 with the link group indicated by name.";
                        }

                    } // list member

                } // list level

            } // list link-group

            ///nokia-state/state/router/isis/lfa-coverage
            list lfa-coverage {
                key "level-number family-coverage";
                description "Enter the lfa-coverage list instance";

                ///nokia-state/state/router/isis/lfa-coverage/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/lfa-coverage/family-coverage
                leaf family-coverage {
                    type enumeration {
                        enum ipv4                           { value 0; }
                        enum ipv6                           { value 1; }
                        enum ipv4-mcast                     { value 2; }
                        enum ipv6-mcast                     { value 3; }
                    }
                    description
                        "The value of the object tmnxIsisLfaFamilyCoverage specifies the
                         multi topology (MT's) for which LFA coverage has been computed.

                         Possible values are:

                         ipv4(0)      - indicates MT0 or standard topology
                         ipv6(1)      - indicates MT2 or IPv6 routing topology
                         ipv4-mcast(2) - indicates MT3 or IPv4 multicast routing topology
                         ipv6-mcast(3) - indicates MT4 or IPv6 multicast routing topology.";
                }

                ///nokia-state/state/router/isis/lfa-coverage/nodes
                container nodes {
                    description "Enter the nodes context";

                    ///nokia-state/state/router/isis/lfa-coverage/nodes/covered
                    leaf covered {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             is being obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/nodes/total
                    leaf total {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             can be obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/nodes/coverage
                    leaf coverage {
                        type types-sros:percent;
                        description
                            "The value indicates how much LFA coverage is being obtained
                             for the set of available nodes.";
                    }

                } // container nodes

                ///nokia-state/state/router/isis/lfa-coverage/ipv4
                container ipv4 {
                    description "Enter the ipv4 context";

                    ///nokia-state/state/router/isis/lfa-coverage/ipv4/covered
                    leaf covered {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             is being obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/ipv4/total
                    leaf total {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             can be obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/ipv4/coverage
                    leaf coverage {
                        type types-sros:percent;
                        description
                            "The value indicates how much LFA coverage is being obtained
                             for the set of available nodes.";
                    }

                } // container ipv4

                ///nokia-state/state/router/isis/lfa-coverage/ipv6
                container ipv6 {
                    description "Enter the ipv6 context";

                    ///nokia-state/state/router/isis/lfa-coverage/ipv6/covered
                    leaf covered {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             is being obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/ipv6/total
                    leaf total {
                        type uint32;
                        description
                            "The value indicates in absolute numbers how much LFA coverage
                             can be obtained for the available routes.";
                    }

                    ///nokia-state/state/router/isis/lfa-coverage/ipv6/coverage
                    leaf coverage {
                        type types-sros:percent;
                        description
                            "The value indicates how much LFA coverage is being obtained
                             for the set of available nodes.";
                    }

                } // container ipv6

            } // list lfa-coverage

            ///nokia-state/state/router/isis/sr-lfa-coverage
            list sr-lfa-coverage {
                key "level-number multi-topology-id sid-type protocol-version";
                description "Enter the sr-lfa-coverage list instance";

                ///nokia-state/state/router/isis/sr-lfa-coverage/level-number
                leaf level-number {
                    type types-isis:level;
                    description "Specifies the IS-IS protocol level to which these attributes are applied.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/multi-topology-id
                leaf multi-topology-id {
                    type enumeration {
                        enum ipv4                           { value 0; }
                        enum ipv6                           { value 1; }
                        enum ipv4-mcast                     { value 2; }
                        enum ipv6-mcast                     { value 3; }
                    }
                    description
                        "The value specifies the multi-topology id number for the path.

                         Possible values are:

                         ipv4(0)      - indicates MT0 or standard topology
                         ipv6(1)      - indicates MT2 or IPv6 routing topology
                         ipv4-mcast(2) - indicates MT3 or IPv4 multicast routing topology
                         ipv6-mcast(3) - indicates MT4 or IPv6 multicast routing topology.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/sid-type
                leaf sid-type {
                    type enumeration {
                        enum node-sid                       { value 0; }
                        enum adj-sid                        { value 1; }
                    }
                    description
                        "The value specifies the SID type for which SR LFA coverage
                         has been computed.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/protocol-version
                leaf protocol-version {
                    type enumeration {
                        enum ipv4                           { value 0; }
                        enum ipv6                           { value 1; }
                    }
                    description "The value specifies the protocol version for which SR LFA coverage has been computed.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/lfa-covered
                leaf lfa-covered {
                    type uint32;
                    description "The value indicates the number of SIDs for which an LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/lfa-covered-percent
                leaf lfa-covered-percent {
                    type types-sros:percent;
                    description "The value indicates the portion of SIDs for which an LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/remote-lfa-covered
                leaf remote-lfa-covered {
                    type uint32;
                    description "The value indicates the number of SIDs for which an Remote LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/remote-lfa-covered-percent
                leaf remote-lfa-covered-percent {
                    type types-sros:percent;
                    description "The value indicates the portion of SIDs for which an Remote LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/ti-lfa-covered
                leaf ti-lfa-covered {
                    type uint32;
                    description "The value indicates the number of SIDs for which an Topology Independent LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/ti-lfa-covered-percent
                leaf ti-lfa-covered-percent {
                    type types-sros:percent;
                    description "The value indicates the portion of SIDs for which an LFA is found.";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/total-sid
                leaf total-sid {
                    type uint32;
                    description "The value indicates the number of SIDs eligible for SR LFA calculation";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/backup-total-sid
                leaf backup-total-sid {
                    type uint32;
                    description "The value indicates the number of SIDs for which an LFA, Remote LFA or Topology Independent LFA is found";
                }

                ///nokia-state/state/router/isis/sr-lfa-coverage/backup-total-sid-percent
                leaf backup-total-sid-percent {
                    type uint32;
                    description "The value indicates the portion of SIDs for which an LFA, Remote LFA or Topology Independent LFA is found";
                }

            } // list sr-lfa-coverage

            ///nokia-state/state/router/isis/database
            list database {
                key "level-number lsp-id";
                description "Enter the database list instance";

                ///nokia-state/state/router/isis/database/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/database/lsp-id
                leaf lsp-id {
                    type types-isis:lsp-id;
                    description
                        "The value specifies the LSP Id and is given in the format as 6 octets of adjacency system-id followed by
                         1 octet Lan-ID and 1 octet LSP Number.";
                }

                ///nokia-state/state/router/isis/database/seq
                leaf seq {
                    type yang:counter32;
                    description
                        "The value indicates the sequence number of
                         an LSP and is a four byte quantity that represents the version of an LSP.

                         The higher the sequence number, the more up to date the information.

                         The sequence number is always incremented by the system that originated
                         the LSP and ensures that there is only one version of that LSP in the
                         entire network.";
                }

                ///nokia-state/state/router/isis/database/checksum
                leaf checksum {
                    type int32 {
                        range "0..65535";
                    }
                    description
                        "The value indicates the checksum of
                         contents of LSP from the SourceID field in the LSP till the end.

                         The checksum is computed using the Fletcher checksum algorithm. ";
                }

                ///nokia-state/state/router/isis/database/zero-rtl
                leaf zero-rtl {
                    type boolean;
                    description
                        "The value indicates the LSP state if
                         it has once reached zero remaining lifetime.

                         If this object is 'true' then the object lifetime-remain will
                         maintain the time remaining after which this LSP will be discarded.";
                }

                ///nokia-state/state/router/isis/database/lifetime-remain
                leaf lifetime-remain {
                    type int32 {
                        range "0..65535";
                    }
                    units "seconds";
                    description
                        "The value indicates the
                         Remaining lifetime of this LSP and is a decrementing counter that
                         decrements in seconds starting from the value as received in the
                         LSP if not self-originated OR from lsp-life-time for self
                         originated LSPs.

                         When the remaining lifetime becomes zero, the contents of the LSP
                         should not be considered for SPF calculation.";
                }

                ///nokia-state/state/router/isis/database/version
                leaf version {
                    type int32;
                    description
                        "The value indicates the version of
                         the ISIS protocol that has generated the LSP";
                }

                ///nokia-state/state/router/isis/database/pkt-type
                leaf pkt-type {
                    type int32;
                    description
                        "The value indicates the packet type
                         for instance Hello PDUs, LSPs, CSNPs OR PSNPs at both IS-IS protocol
                         levels i.e. L1 and L2 as maintained in of the object packet-type.";
                }

                ///nokia-state/state/router/isis/database/pkt-version
                leaf pkt-version {
                    type int32;
                    description
                        "The value indicates the version of
                         the ISIS protocol that has generated the Packet.";
                }

                ///nokia-state/state/router/isis/database/attributes
                leaf attributes {
                    type int32;
                    description
                        "The value indicates the attributes
                         associated with the LSP and these include the attached bit,
                         overload bit, IS type of the system originating the LSP and the
                         partition repair capability.

                         The attached bit and the overload bit are of significance only when
                         present in the LSP numbered zero and should be ignored on receipt in
                         any other LSP.";
                }

                ///nokia-state/state/router/isis/database/max-area
                leaf max-area {
                    type int32;
                    description
                        "The value indicates the maximum number
                         of areas supported by the originator of the LSP.

                         A value of 0 indicates a default of 3 areas. ";
                }

                ///nokia-state/state/router/isis/database/alloc-len
                leaf alloc-len {
                    type int32;
                    description
                        "The value indicates the length
                         allocated for the LSP to be stored.";
                }

                ///nokia-state/state/router/isis/database/system-id
                leaf system-id {
                    type types-igp:system-id;
                    description "The value indicates the system-id as part of lsp-id used by the originator.";
                }

                ///nokia-state/state/router/isis/database/system-id-len
                leaf system-id-len {
                    type int32;
                    description
                        "The value indicates the length of
                         the system-id as used by the originator.";
                }

                ///nokia-state/state/router/isis/database/used-len
                leaf used-len {
                    type int32;
                    description
                        "The value indicates the used length
                         for the LSP.

                         For an LSP that is not self originated, the used length is always equal
                         to alloc-len for self originated LSPs, the used length is
                         less than or equal to alloc-len.";
                }

                ///nokia-state/state/router/isis/database/value
                leaf value {
                    type string {
                        length "27..9778";
                    }
                    description "Contents of the LSP.";
                }

            } // list database

            ///nokia-state/state/router/isis/capabilities
            list capabilities {
                key "level-number lsp-id";
                description "Enter the capabilities list instance";

                ///nokia-state/state/router/isis/capabilities/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/capabilities/lsp-id
                leaf lsp-id {
                    type leafref {
                        path "../../database[level-number=current()/../level-number]/lsp-id";
                    }
                    description
                        "The value specifies the LSP Id and is given in the format as 6 octets of adjacency system-id followed by
                         1 octet Lan-ID and 1 octet LSP Number.";
                }

                ///nokia-state/state/router/isis/capabilities/tlv-buffer
                leaf tlv-buffer {
                    type string {
                        length "0..9778";
                    }
                    description "The capability TLV.";
                }

                ///nokia-state/state/router/isis/capabilities/router-id
                leaf router-id {
                    type types-sros:ipv4-address;
                    description "IPv4 router-id.";
                }

                ///nokia-state/state/router/isis/capabilities/s-flag
                leaf s-flag {
                    type boolean;
                    description " Value of the S-flag in the router capability TLV.";
                }

                ///nokia-state/state/router/isis/capabilities/d-flag
                leaf d-flag {
                    type boolean;
                    description " Value of the D-flag in the router capability TLV.";
                }

            } // list capabilities

            ///nokia-state/state/router/isis/hostname
            list hostname {
                key "system-id";
                description "Enter the hostname list instance";

                ///nokia-state/state/router/isis/hostname/system-id
                leaf system-id {
                    type types-igp:system-id;
                    description "Specifies the ID for this instance of the Integrated IS-IS protocol.";
                }

                ///nokia-state/state/router/isis/hostname/host-name
                leaf host-name {
                    type types-sros:display-string;
                    description "The value indicates the mapping hostname for the corresponding system-id.";
                }

            } // list hostname

            ///nokia-state/state/router/isis/route
            list route {
                key "multi-topology-id destination";
                description "Enter the route list instance";

                ///nokia-state/state/router/isis/route/multi-topology-id
                leaf multi-topology-id {
                    type uint32;
                    description
                        "The value specifies the multi-topology id number for the path.

                         If multi-topology is not supported for the path then
                         the value should be 0.";
                }

                ///nokia-state/state/router/isis/route/destination
                leaf destination {
                    type types-sros:ip-prefix;
                    description "The value specifies the IP address and mask of the route destination.";
                }

                ///nokia-state/state/router/isis/route/level
                leaf level {
                    type types-isis:level;
                    description "The value indicates the IS-IS Level at which the prefix was learned.";
                }

                ///nokia-state/state/router/isis/route/status
                leaf status {
                    type enumeration {
                        enum active                         { value 0; }
                        enum rtm-add-failed                 { value 1; }
                        enum fib-add-failed                 { value 2; }
                    }
                    description "The value indicates the reason why a route is not active.";
                }

                ///nokia-state/state/router/isis/route/metric
                leaf metric {
                    type uint32;
                    description
                        "The value indicates the routing metric for a backup route.

                         The semantics of this metric are determined by the routing-protocol
                         specified in the route's ipCidrRouteProto value.

                         The value is only valid when backup-flags has a value of 'has-lfa'.";
                }

                ///nokia-state/state/router/isis/route/type
                leaf type {
                    type enumeration {
                        enum internal                       { value 1; }
                        enum external                       { value 2; }
                    }
                    description "The value indicates the type of route represented by this row entry.";
                }

                ///nokia-state/state/router/isis/route/tag
                leaf tag {
                    type uint32;
                    description
                        "The value indicates a 32-bit integer route tag for this route.

                         A value of 0 indicates that the tag has not been set.";
                }

                ///nokia-state/state/router/isis/route/algorithm
                leaf algorithm {
                    type int32 {
                        range "0|128..255";
                    }
                    description "The value indicates the algorithm.";
                }

                ///nokia-state/state/router/isis/route/backup
                container backup {
                    description "Enter the backup context";

                    ///nokia-state/state/router/isis/route/backup/next-hop-ip
                    leaf next-hop-ip {
                        type types-sros:ip-address-with-zone;
                        description "The value specifies the IP address of the next hop for this route.";
                    }

                    ///nokia-state/state/router/isis/route/backup/next-hop-type
                    leaf next-hop-type {
                        type types-isis:cidr-next-hop-type;
                        description "The value indicates the type of next hop for this backup route.";
                    }

                    ///nokia-state/state/router/isis/route/backup/next-hop-owner
                    leaf next-hop-owner {
                        type types-isis:cidr-next-hop-owner;
                        description "The value indicates the owner of next hop for this backup route.";
                    }

                    ///nokia-state/state/router/isis/route/backup/next-hop-tunnel-id
                    leaf next-hop-tunnel-id {
                        type uint32;
                        description
                            "The value indicates the auxiliary information, for next hop owner as indicated by
                             backup-next-hop-owner.

                             The value of indicates the tunnel-id existing for this backup next hop type and owner.";
                    }

                    ///nokia-state/state/router/isis/route/backup/type
                    leaf type {
                        type enumeration {
                            enum node-protection                { value 1; }
                            enum link-protection                { value 2; }
                        }
                        description
                            "The value indicates the type of protection used by the backup next-hop.

                             The value 'not-applicable' indicates that the backup next hop type
                             is not applicable
                             the value 'node-protection' indicates that the backup next hop uses a
                             node-protection mechanism
                             the value 'link-protection' indicates that the backup next hop uses
                             link-protection mechanism.";
                    }

                    ///nokia-state/state/router/isis/route/backup/metric
                    leaf metric {
                        type uint32;
                        description
                            "The value indicates the routing metric for a backup route.

                             The semantics of this metric are determined by the routing-protocol
                             specified in the route's ipCidrRouteProto value.

                             The value is only valid when backup-flags has a value of 'has-lfa'.";
                    }

                    ///nokia-state/state/router/isis/route/backup/flags
                    leaf flags {
                        type enumeration {
                            enum none                           { value 0; }
                            enum has-lfa                        { value 1; }
                        }
                        description
                            "The value indicates the presence or absence of LFA next-hops.

                             The value 'none' indicates that no next hop is present
                             the value 'has-lfa' indicates that an LFA next hop is present in addition
                             to the regular next-hop.";
                    }

                } // container backup

                ///nokia-state/state/router/isis/route/prefix-sid
                container prefix-sid {
                    description "Enter the prefix-sid context";

                    ///nokia-state/state/router/isis/route/prefix-sid/label
                    leaf label {
                        type uint32;
                        description "The value specifies the SID label or index for this prefix.";
                    }

                    ///nokia-state/state/router/isis/route/prefix-sid/flags
                    leaf flags {
                        type bits {
                            bit bit-r                          { position 0; }
                            bit bit-n                          { position 1; }
                            bit bit-p                          { position 2; }
                            bit bit-e                          { position 3; }
                            bit bit-v                          { position 4; }
                            bit bit-l                          { position 5; }
                        }
                        description
                            "The value indicates the flags of a Prefix-SID advertised by
                             an IP Reach or Label Binding TLV.

                             bit-r   (0)  - Re-advertisement flag.  If set, then the prefix to
                               which this Prefix-SID is attached, has been propagated by the
                               router either from another level (i.e.: from level-1 to level-2
                               or the opposite) or from redistribution (e.g.: from another
                               protocol).
                             bit-n   (1)  - Node-SID flag. The N-Flag is set on Prefix-SIDs
                               attached to a router loopback address.
                             bit-p   (2)  - no-PHP flag. If set, then the penultimate hop MUST NOT
                               pop the Prefix-SID before delivering the packet to the node
                               that advertised the Prefix-SID.
                             bit-e   (3)  - Explicit-Null Flag.  If set, any upstream neighbor
                               of the Prefix-SID originator MUST replace the Prefix-SID with
                               a Prefix-SID having an Explicit-NULL value (0 for IPv4 and 2 for
                               IPv6) before forwarding the packet.
                             bit-v   (4)  - Value flag. If set, then the Prefix-SID carries a
                               value (instead of an index).
                             bit-l   (5)  - Local Flag.  If set, then the value/index carried by
                               the Prefix-SID has local significance.";
                    }

                } // container prefix-sid

                ///nokia-state/state/router/isis/route/next-hop
                list next-hop {
                    key "ecmp-index";
                    description "Enter the next-hop list instance";

                    ///nokia-state/state/router/isis/route/next-hop/ecmp-index
                    leaf ecmp-index {
                        type types-router:ip-ecmp;
                        description "ECMP index of this route next-hop.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/next-hop-ip
                    leaf next-hop-ip {
                        type types-sros:ip-address-with-zone;
                        description "The value specifies the IP address of the next hop for this route.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/next-hop-type
                    leaf next-hop-type {
                        type types-isis:cidr-next-hop-type;
                        description "The value indicates the type of next hop for this backup route.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/next-hop-owner
                    leaf next-hop-owner {
                        type types-isis:cidr-next-hop-owner;
                        description "The value indicates the owner of next hop for this backup route.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/next-hop-tunnel-id
                    leaf next-hop-tunnel-id {
                        type uint32;
                        description
                            "The value indicates the auxiliary information, for next hop owner as indicated by
                             backup-next-hop-owner.

                             The value of indicates the tunnel-id existing for this backup next hop type and owner.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/spf-version
                    leaf spf-version {
                        type yang:counter32;
                        description "The value indicates the run of SPF calculation in which this route was selected.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/next-hop-system-id
                    leaf next-hop-system-id {
                        type types-igp:system-id;
                        description
                            "The value indicates the system-id of the next hop IS through
                             which this route is reachable.";
                    }

                    ///nokia-state/state/router/isis/route/next-hop/rtm-status
                    leaf rtm-status {
                        type enumeration {
                            enum success                        { value 0; }
                            enum discarded                      { value 1; }
                        }
                        description "Indicates the next hop status in RTM";
                    }

                } // list next-hop

            } // list route

            ///nokia-state/state/router/isis/spf-log
            list spf-log {
                key "time-stamp";
                description "Enter the spf-log list instance";

                ///nokia-state/state/router/isis/spf-log/time-stamp
                leaf time-stamp {
                    type yang:timeticks;
                    units "centiseconds";
                    description "The value specifies the time (in centiseconds) since system-up when the SPF was ran.";
                }

                ///nokia-state/state/router/isis/spf-log/duration
                leaf duration {
                    type yang:timeticks;
                    units "centiseconds";
                    description "The value indicates the time (in centiseconds) required to complete the SPF run.";
                }

                ///nokia-state/state/router/isis/spf-log/l1-nodes
                leaf l1-nodes {
                    type uint32;
                    description "The value indicates the number of L1 nodes involved in the SPF run.";
                }

                ///nokia-state/state/router/isis/spf-log/l2-nodes
                leaf l2-nodes {
                    type uint32;
                    description "The value indicates the number of L2 nodes involved in the SPF run.";
                }

                ///nokia-state/state/router/isis/spf-log/trigger-lsp-id
                leaf trigger-lsp-id {
                    type types-isis:lsp-id;
                    description "The value indicates the LSP-Id of the last LSP processed before the SPF run.";
                }

                ///nokia-state/state/router/isis/spf-log/event-count
                leaf event-count {
                    type uint32;
                    description "The value indicates the number of SPF events that triggered the SPF calculation.";
                }

                ///nokia-state/state/router/isis/spf-log/type
                leaf type {
                    type enumeration {
                        enum regular                        { value 0; }
                        enum lfa                            { value 1; }
                        enum partial-spf                    { value 2; }
                        enum partial-lfa                    { value 3; }
                        enum remote-lfa                     { value 4; }
                        enum ti-lfa                         { value 5; }
                    }
                    description "The value indicates the type of SPF calculation.";
                }

                ///nokia-state/state/router/isis/spf-log/trigger-reason
                leaf trigger-reason {
                    type bits {
                        bit new-adjacency                  { position 0; }
                        bit new-lsp                        { position 1; }
                        bit new-area                       { position 2; }
                        bit reach                          { position 3; }
                        bit ecmp-changed                   { position 4; }
                        bit new-metric                     { position 5; }
                        bit te-changed                     { position 6; }
                        bit restart                        { position 7; }
                        bit lsp-expired                    { position 8; }
                        bit lsp-db-changed                 { position 9; }
                        bit lsp-changed                    { position 10; }
                        bit new-preference                 { position 11; }
                        bit new-nlp-id                     { position 12; }
                        bit manual-run                     { position 13; }
                        bit admin-tag-changed              { position 14; }
                        bit tunnel-changed                 { position 15; }
                        bit throttle-end                   { position 16; }
                        bit lfa-changed                    { position 17; }
                    }
                    description
                        "The value indicates the reasons that triggered this SPF run.

                         new-sdjacency (0)      - a new adjacency was formed.
                         new-ldp (1)            - a new LSP was received.
                         new-srea (2)           - a new area was joined.
                         reach (3)              - a new prefix can be reached.
                         ecmp-changed (4)       - the number of ecmp routes to a destination changed.
                         new-metric (5)         - a route has a new metric.
                         te-changed (6)         - traffic engineering changed.
                         restart (7)            - the IS-IS router was restarted.
                         lsp-expired (8)        - an LSP expired.
                         lsp-db-changed (9)     - the IS-IS LSP database was cleared.
                         lsp-changed (10)       - an LSP changed.
                         new-preference (11)    - a route preference changed.
                         new-nlp-id (12)        - a Network Layer Protocol was added to the
                                                  IS-IS router protocol set.
                         manual-run (13)        - Manual request issued.
                         admin-tag-changed (14) - admin tag has changed.
                         tunnel-changed (15)    - list of tunnels has changed.
                         throttle-end (16)      - throttling of SPF ended.
                         lfa-changed (17)       - lfa changed.";
                }

            } // list spf-log

            ///nokia-state/state/router/isis/received-area-address
            list received-area-address {
                key "area-address";
                description "Enter the received-area-address list instance";

                ///nokia-state/state/router/isis/received-area-address/area-address
                leaf area-address {
                    type types-isis:area-address;
                    description
                        "An area address reported in a Level 1 LSP received by
                         this instance of the protocol.";
                }

            } // list received-area-address

            ///nokia-state/state/router/isis/topology
            list topology {
                key "level-number multi-topology-id path-id";
                description "Enter the topology list instance";

                ///nokia-state/state/router/isis/topology/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/topology/multi-topology-id
                leaf multi-topology-id {
                    type uint32;
                    description
                        "The value specifies the multi-topology id number for the path.

                         If multi-topology is not supported for the path then
                         the value should be 0.";
                }

                ///nokia-state/state/router/isis/topology/path-id
                leaf path-id {
                    type string {
                        length "16";
                    }
                    description
                        "The value specifies the path identifier
                         and has first 6 octets as the system-id followed by one octet
                         of the Lan-ID.";
                }

                ///nokia-state/state/router/isis/topology/metric
                leaf metric {
                    type uint32;
                    description
                        "The value indicates the metric
                         assigned to this path entry after SPF calculations.

                         The lower the metric value, the shorter the path and hence more
                         preferred by the protocol.";
                }

                ///nokia-state/state/router/isis/topology/route-type
                leaf route-type {
                    type enumeration {
                        enum spf                            { value 0; }
                        enum lfa                            { value 1; }
                    }
                    description "The value indicates whether a backup route exists for this row entry.";
                }

                ///nokia-state/state/router/isis/topology/lfa
                container lfa {
                    description "Enter the lfa context";

                    ///nokia-state/state/router/isis/topology/lfa/type
                    leaf type {
                        type enumeration {
                            enum none                           { value 0; }
                            enum node-link                      { value 1; }
                            enum path-link                      { value 2; }
                        }
                        description "The value indicates the type of route represented by this row entry.";
                    }

                    ///nokia-state/state/router/isis/topology/lfa/interface
                    leaf interface {
                        type types-sros:interface-name;
                        description
                            "The value indicates the
                             loopfree-alternate ifIndex of the outgoing interface for the path.";
                    }

                    ///nokia-state/state/router/isis/topology/lfa/next-hop
                    leaf next-hop {
                        type types-igp:system-id;
                        description
                            "The value indicates the
                             loopfree-alternate next hop and is referenced by the system-id.";
                    }

                    ///nokia-state/state/router/isis/topology/lfa/metric
                    leaf metric {
                        type uint32;
                        description
                            "The value indicates the metric assigned to this entry which are a result
                             of loopfree-alternate calculations.

                             The lower the metric value, the shorter is the path and hence more
                             preferred by the protocol.";
                    }

                } // container lfa

                ///nokia-state/state/router/isis/topology/next-hop
                list next-hop {
                    key "ecmp-index";
                    description "Enter the next-hop list instance";

                    ///nokia-state/state/router/isis/topology/next-hop/ecmp-index
                    leaf ecmp-index {
                        type uint32;
                        description "ECMP index of this route next-hop.";
                    }

                    ///nokia-state/state/router/isis/topology/next-hop/interface
                    leaf interface {
                        type types-sros:interface-name;
                        description "The value specifies the outgoing interface for the path.";
                    }

                    ///nokia-state/state/router/isis/topology/next-hop/next-hop-system-id
                    leaf next-hop-system-id {
                        type types-igp:system-id;
                        description
                            "The value specifies the system-id of the next hop and is used to reference the
                             next hop for this route.";
                    }

                    ///nokia-state/state/router/isis/topology/next-hop/snpa
                    leaf snpa {
                        type types-isis:snpa-address;
                        description "The value indicates the subnet point of attachment for this path.";
                    }

                } // list next-hop

            } // list topology

            ///nokia-state/state/router/isis/prefix-sid
            list prefix-sid {
                key "multi-topology-id destination advertising-system-id level-number label";
                description "Enter the prefix-sid list instance";

                ///nokia-state/state/router/isis/prefix-sid/multi-topology-id
                leaf multi-topology-id {
                    type uint32;
                    description
                        "The value specifies the multi-topology id number for the path.

                         If multi-topology is not supported for the path then
                         the value should be 0.";
                }

                ///nokia-state/state/router/isis/prefix-sid/destination
                leaf destination {
                    type types-sros:ip-prefix;
                    description "The value specifies the IP address and mask of the route destination.";
                }

                ///nokia-state/state/router/isis/prefix-sid/advertising-system-id
                leaf advertising-system-id {
                    type types-igp:system-id;
                    description
                        "The value specifies the system-id of the advertising
                         IS through which this prefix/SID is reachable.";
                }

                ///nokia-state/state/router/isis/prefix-sid/level-number
                leaf level-number {
                    type enumeration {
                        enum 1                              { value 1; }
                        enum 2                              { value 2; }
                    }
                    description "ISIS protocol level number";
                }

                ///nokia-state/state/router/isis/prefix-sid/label
                leaf label {
                    type uint32;
                    description "The value specifies the SID label for this prefix.";
                }

                ///nokia-state/state/router/isis/prefix-sid/flags
                leaf flags {
                    type bits {
                        bit bit-r                          { position 0; }
                        bit bit-n                          { position 1; }
                        bit bit-p                          { position 2; }
                        bit bit-e                          { position 3; }
                        bit bit-v                          { position 4; }
                        bit bit-l                          { position 5; }
                    }
                    description
                        "The value indicates the flags of a Prefix-SID advertised by
                         an IP Reach or Label Binding TLV.

                         bit-r   (0)  - Re-advertisement flag.  If set, then the prefix to
                           which this Prefix-SID is attached, has been propagated by the
                           router either from another level (i.e.: from level-1 to level-2
                           or the opposite) or from redistribution (e.g.: from another
                           protocol).
                         bit-n   (1)  - Node-SID flag. The N-Flag is set on Prefix-SIDs
                           attached to a router loopback address.
                         bit-p   (2)  - no-PHP flag. If set, then the penultimate hop MUST NOT
                           pop the Prefix-SID before delivering the packet to the node
                           that advertised the Prefix-SID.
                         bit-e   (3)  - Explicit-Null Flag.  If set, any upstream neighbor
                           of the Prefix-SID originator MUST replace the Prefix-SID with
                           a Prefix-SID having an Explicit-NULL value (0 for IPv4 and 2 for
                           IPv6) before forwarding the packet.
                         bit-v   (4)  - Value flag. If set, then the Prefix-SID carries a
                           value (instead of an index).
                         bit-l   (5)  - Local Flag.  If set, then the value/index carried by
                           the Prefix-SID has local significance.";
                }

                ///nokia-state/state/router/isis/prefix-sid/algorithm
                leaf algorithm {
                    type int32 {
                        range "0|128..255";
                    }
                    description "The value indicates the algorithm related to the prefix SID.";
                }

                ///nokia-state/state/router/isis/prefix-sid/type
                leaf type {
                    type enumeration {
                        enum internal                       { value 1; }
                        enum external                       { value 2; }
                    }
                    description "The value indicates the type of route represented by this row entry.";
                }

                ///nokia-state/state/router/isis/prefix-sid/srms
                leaf srms {
                    type boolean;
                    description
                        "The value indicates whether or not the Prefix/SID is advertised by a
                         Segment Routing Mapping Server.";
                }

                ///nokia-state/state/router/isis/prefix-sid/srms-selected
                leaf srms-selected {
                    type boolean;
                    description
                        "The value indicates whether or not the prefix SID received in the
                         SRMS TLV is selected to be programmed.

                         When there is however a SID for the same prefix received in a
                         prefix TLV, that prefix SID will be programmed and not the
                         SRMS prefix SID.";
                }

                ///nokia-state/state/router/isis/prefix-sid/shared-sid
                leaf shared-sid {
                    type boolean;
                    description
                        "The value indicates wheter or not the prefix SID is a
                         shared node SID that was configured system wide.

                         Can only be true for self-originated prefix-sids.";
                }

            } // list prefix-sid

            ///nokia-state/state/router/isis/sid-statistics
            list sid-statistics {
                key "label";
                description "Enter the sid-statistics list instance";

                ///nokia-state/state/router/isis/sid-statistics/label
                leaf label {
                    type uint32;
                    description "The value specifies the SID label";
                }

                ///nokia-state/state/router/isis/sid-statistics/type
                leaf type {
                    type enumeration {
                        enum node                           { value 0; }
                        enum adjacency                      { value 1; }
                        enum adjacency-set                  { value 2; }
                    }
                    description "The type of SID for which statistics are collected";
                }

                ///nokia-state/state/router/isis/sid-statistics/prefix
                leaf prefix {
                    type types-sros:ip-prefix;
                    description "The IP address type";
                }

                ///nokia-state/state/router/isis/sid-statistics/adjacency-set
                leaf adjacency-set {
                    type uint32 {
                        range "0..max";
                    }
                    description "When type is adjacency-set then this is the adjacency-set for whcih the sid is used";
                }

                ///nokia-state/state/router/isis/sid-statistics/interface
                leaf interface {
                    type types-sros:interface-name;
                    description "When type is adjacency then this is the interface on which the adjacency is formed";
                }

                ///nokia-state/state/router/isis/sid-statistics/algorithm
                leaf algorithm {
                    type uint8;
                    description
                        "The value indicates the algorithm related to the prefix SID.

                         The value can indicate a defined IGP Algorithm (value 0 is SPF) or
                         a Flexible Algorithm (range 128..255).";
                }

                ///nokia-state/state/router/isis/sid-statistics/egress
                container egress {
                    description "Enter the egress context";

                    ///nokia-state/state/router/isis/sid-statistics/egress/oper-state
                    leaf oper-state {
                        type enumeration {
                            enum enabled                        { value 1; }
                            enum disabled                       { value 2; }
                            enum no-resource                    { value 3; }
                        }
                        description "The statistics operational state of this SID for this direction";
                    }

                    ///nokia-state/state/router/isis/sid-statistics/egress/octets
                    leaf octets {
                        type yang:counter64;
                        description "The number of octets";
                    }

                    ///nokia-state/state/router/isis/sid-statistics/egress/packets
                    leaf packets {
                        type yang:counter64;
                        description "The number of packets";
                    }

                } // container egress

                ///nokia-state/state/router/isis/sid-statistics/ingress
                container ingress {
                    description "Enter the ingress context";

                    ///nokia-state/state/router/isis/sid-statistics/ingress/oper-state
                    leaf oper-state {
                        type enumeration {
                            enum enabled                        { value 1; }
                            enum disabled                       { value 2; }
                            enum no-resource                    { value 3; }
                        }
                        description "The statistics operational state of this SID for this direction";
                    }

                    ///nokia-state/state/router/isis/sid-statistics/ingress/octets
                    leaf octets {
                        type yang:counter64;
                        description "The number of octets";
                    }

                    ///nokia-state/state/router/isis/sid-statistics/ingress/packets
                    leaf packets {
                        type yang:counter64;
                        description "The number of packets";
                    }

                } // container ingress

            } // list sid-statistics

        } // list isis

    } // grouping state-router-isis

}
